{"version":3,"sources":["store/hooks.ts","store/features/theme/themeSlice.ts","interfaces/enum.ts","store/features/proof/auxi.ts","interfaces/undoClasses.ts","store/features/theme/auxi.ts","store/features/proof/reducers.ts","store/features/proof/proofSlice.ts","store/features/externalCmd/externalCmd.ts","components/VisualizerSmtDrawer/VisualizerSmtDrawer.tsx","components/App/App.tsx","store/features/file/fileSlice.ts","store/store.ts","ReactUtils/reportWebVitals.ts","index.tsx","wasm/cvc5.js"],"names":["useAppSelector","useSelector","themeSlice","createSlice","name","initialState","value","reducers","toggle","state","actions","selectTheme","theme","drawerHelpersKind","renderLetKind","ClusterKind","removeEscapedCharacters","s","newS","i","length","descendants","proof","nodeId","validChildren","children","filter","node","isHidden","concat","reduce","acc","childId","findNodesClusters","hiddenNodesArray","hiddenNodes","clusters","clusteredNodes","parents","map","hiddenNode","forEach","parent","clusterID","push","p","hiddenID","some","_p","indexOf","pastCluster","JSON","stringify","cluster","clusterParents","parentCluster","id","splice","sliceNodesCluster","clusterMap","arguments","undefined","slicedClusters","currentNode","parentsClusters","clusterType","keys","Object","target","Number","c","child","extractTheoryLemmas","haveCluster","conclusion","type","TL","n","rule","BaseUndo","constructor","nodes","this","MoveUndo","x","y","super","ColorUndo","color","colorMap","UnfoldUndo","positions","colors","FoldUndo","HideUndo","nPiNodes","colorConverter","colorName","undoQueue","Deque","addUndo","undo","shift","clearHiddenNodes","action","hiddenArray","foldAllDescendants","size","hashMap","newHidden","payload","isTheFirst","nodeID","visualInfo","selected","pos","unselectNodes","nodesSelected","cleanAll","len","process","proofJSON","clustersInfos","dot","isJSON","parse","letMap","clustersColors","args","NaN","dependencies","NONE","comment","slice","lastIndexOf","replace","split","line","search","label","idx","numbers","substring","str","num","thisType","SAT","CNF","PP","IN","parseInt","trim","attributes","commentJSON","subProofQty","isNaN","processDot","view","clustersMap","Array","fill","theoryLemmaMap","_ref","index","piID","piNode","max","hideNodes","toHideNodes","unfoldNodes","pi","hiddens","unfoldNextNode","firstHidden","nodeClusters","prevHiddenNodes","flatSet","Set","hidVec","add","has","_cluster","setVisualInfo","selectByArea","upperL","lowerR","thisNode","unselectByArea","selectNodes","changeStyle","style","applyView","clear","_ref2","applyColor","thisInfo","moveNode","setSmt","smt","topUndo","pop","_ref3","_ref4","oldPiNum","newSize","_ref5","_ref6","proofSlice","selectSmt","externalCmd","findData","nodeToFind","findOption","renderData","count","fileChanged","spinner","selectData","square","findNode","option","reRender","addRenderCount","blockRender","allowRenderNewFile","blockRenderNewFile","setSpinner","setSelectArea","VisualizerSmtDrawer","isOpen","setDrawerIsOpen","addErrorToast","darkTheme","proofSmt","stdoutRef","useRef","stderrRef","changeOutRef","updateCounter","forceUpdate","useReducer","errorCounter","forceError","optionsIsOpen","setOptionsIsOpen","open","textRef","err","setErr","useState","defaultArgs","currentOutput","setCurrentOutput","inputFlags","setInputFlags","dispatch","useDispatch","useEffect","current","options","tabIndex","outputOptions","readOnly","wordWrap","lineNumbers","divColor","updateStdout","updateStderr","postCVC5run","isThereError","result","replaceAll","cleanStdout","_jsxs","Drawer","className","height","width","margin","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","hasBackdrop","position","Position","TOP","usePortal","onClose","e","preventDefault","icon","title","_jsx","Classes","DRAWER_BODY","overflow","MonacoEditor","language","onChange","onMount","DRAWER_FOOTER","borderTop","display","alignItems","flex","placeholder","flags","float","Button","text","onClick","async","arg","inputTxt","clausePattern","match","Module","proofTxt","out","postCVC5","binaryFileName","then","App","dialogIsOpen","setDialogIsOpen","inTutorial","setInTutorial","drawerIsOpen","setDrawerOpenState","smtDrawerIsOpen","setSmtDrawerIsOpen","disableAllDrawers","smtOptions","setSmtOptions","argsType","customArgs","toaster","refHandlers","ref","justifyContent","Toaster","show","intent","Intent","DANGER","message","fileSlice","filesCount","set","store","configureStore","reducer","file","fileReducer","proofReducer","themeReducer","externalCmdReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","Provider","document","getElementById","_scriptDir","window","location","origin","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","read_","readAsync","readBinary","moduleOverrides","assign","arguments_","thisProgram","quit_","status","toThrow","scriptDirectory","currentScript","src","substr","url","xhr","XMLHttpRequest","send","responseText","onload","onerror","responseType","response","wasmMemory","WebAssembly","abort","EXITSTATUS","ABORT","assert","condition","buffer","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","wasmTable","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","maxBytesToRead","endIdx","endPtr","decode","subarray","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","lengthBytesUTF8","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","callback","what","RuntimeError","wasmBinaryFile","tempDouble","tempI64","isDataURI","filename","startsWith","getBinary","ExitStatus","callRuntimeCallbacks","callbacks","writeArrayToMemory","array","wasmTableMirror","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","set_adjusted_ptr","add_ref","release_ref","prev","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","PATH","isAbs","path","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","unshift","normalize","isAbsolute","trailingSlash","join","dirname","root","dir","basename","lastSlash","paths","prototype","call","join2","l","r","getRandomDevice","crypto","randomBuffer","Uint8Array","getRandomValues","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","read","offset","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","val","default_tty1_ops","mmapAlloc","MEMFS","ops_table","mount","createNode","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","canOwn","whence","prot","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","defineProperties","object","get","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","apply","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","ret","buf","writeFile","data","actualNumBytes","ArrayBuffer","isView","byteLength","chdir","createDefaultDirectories","createDefaultDevices","random_device","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","code","stack","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","_length","_chunkSize","writeChunks","fn","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","noRunDep","dep","arrayBuffer","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","func","abs","floor","getTime","doMsync","addr","varargs","getStr","getStreamFromFD","PIPEFS","BUCKET_BUFFER_SIZE","createPipe","pipe","buckets","refcnt","roffset","rName","nextname","wName","rNode","wNode","readableStream","writableStream","readable_fd","writable_fd","poll","bucket","request","fsync","currentLength","toRead","totalRead","toRemove","currBucket","bucketSize","tmpSlice","dataLen","freeBytesInCurrBuffer","numBuckets","remElements","newBucket","_emscripten_get_now","performance","ENV","getEnvStrings","strings","env","navigator","languages","_proc_exit","exitJS","implicit","_exit","__isLeapYear","year","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","_strftime","maxsize","format","tm","tm_zone","date","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","toString","leadingNulls","compareByDay","date1","date2","sgn","compare","getFullYear","getMonth","getDate","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","__addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","sum","__arraySum","jan1","dec31","off","ahead","bytes","getCFunc","ident","ccall","returnType","argTypes","toC","outPtr","stringToUTF8","stackAlloc","cArgs","converter","stackSave","stackRestore","Boolean","convertReturnValue","onDone","readMode","writeMode","calledRun","asmLibraryArg","fp","sig","funcPtr","getWasmTableEntry","_malloc","___errno_location","op","argp","fdPtr","res","dest","copyWithin","requestedSize","__environ","environ_buf","bufSize","string","writeAsciiToMemory","penviron_count","penviron_buf_size","pbuf","iov","iovcnt","pnum","curr","doReadv","offset_low","offset_high","newOffset","hi","lo","doWritev","_getentropy","randomDevice","info","receiveInstance","instance","module","cb","exports","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","binary","instantiate","reason","instantiateStreaming","createWasm","callMain","entryFunction","argc","argv","argv_ptr","allocateUTF8OnStack","handleException","run","shouldRunNow","numericArgs","every","runCaller","ready"],"mappings":"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","file":"static/js/main.e091c6c9.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../store';\nimport { ThemeState } from '../../../interfaces/interfaces';\n\nconst initialState: ThemeState = {\n    value: true,\n};\n\nexport const themeSlice = createSlice({\n    name: 'theme',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        toggle: (state) => {\n            state.value = !state.value;\n        },\n    },\n});\n\nexport const { toggle } = themeSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice theme. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectTheme = (state: RootState): boolean => state.theme.value;\n\nexport default themeSlice.reducer;\n","export enum drawerHelpersKind {\n    RULE,\n    ARGS,\n    CONC,\n    ALL,\n}\n\nexport enum renderLetKind {\n    EXPAND,\n    REVERT,\n}\n\nexport enum ClusterKind {\n    NONE,\n    SAT,\n    CNF,\n    TL,\n    PP,\n    IN,\n}\n","import { ClusterKind } from '../../../interfaces/enum';\nimport { NodeInterface, ProofState } from '../../../interfaces/interfaces';\n\ninterface ClusterColorMap {\n    [type: number]: string;\n}\n\nfunction removeEscapedCharacters(s: string): string {\n    let newS = '';\n    for (let i = 0; i < s.length; i += 1) {\n        if (\n            !(\n                s[i] === '\\\\' &&\n                (s[i + 1] === '\"' ||\n                    s[i + 1] === '>' ||\n                    s[i + 1] === '<' ||\n                    s[i + 1] === '{' ||\n                    s[i + 1] === '}' ||\n                    s[i + 1] === '|')\n            )\n        ) {\n            newS += s[i];\n        }\n    }\n\n    return newS;\n}\n\nexport function processDot(dot: string): [NodeInterface[], ProofState['letMap'], ClusterColorMap] {\n    const nodes: NodeInterface[] = [\n        {\n            id: 0,\n            conclusion: '',\n            rule: '',\n            args: '',\n            children: [],\n            parents: [NaN],\n            descendants: 0,\n            dependencies: [],\n            clusterType: ClusterKind.NONE,\n        },\n    ];\n    let comment: string | null = dot.slice(dot.indexOf('comment='));\n    comment = comment\n        ? removeEscapedCharacters(\n              removeEscapedCharacters(comment.slice(comment.indexOf('=') + 2, comment.indexOf(';') - 1)),\n          )\n        : null;\n\n    const clustersInfos: ClusterColorMap = {};\n    const lines = dot\n        .slice(dot.indexOf('{') + 1, dot.lastIndexOf('}') - 2)\n        .replace(/(\\n|\\t)/gm, '')\n        .split(';');\n    lines.forEach((line) => {\n        if (line.search('subgraph') !== -1) {\n            // Get the label of this node subgraph\n            let label = '';\n            let idx = line.indexOf('label=\"') + 7;\n            while (line[idx] !== '\"') {\n                label += line[idx];\n                idx++;\n            }\n\n            // Get the label of this node subgraph\n            let color = '';\n            idx = line.indexOf('bgcolor=\"') + 9;\n            while (line[idx] !== '\"') {\n                color += line[idx];\n                idx++;\n            }\n\n            // Get the nodes ID's\n            const numbers = line\n                .substring(idx + 1, line.length - 1)\n                .split(/\\s/)\n                .filter((str) => str.length)\n                .map((num) => Number(num));\n\n            let thisType: ClusterKind;\n            switch (label) {\n                case 'SAT':\n                    thisType = ClusterKind.SAT;\n                    break;\n                case 'CNF':\n                    thisType = ClusterKind.CNF;\n                    break;\n                case 'TL':\n                    thisType = ClusterKind.TL;\n                    break;\n                case 'PP':\n                    thisType = ClusterKind.PP;\n                    break;\n                case 'IN':\n                    thisType = ClusterKind.IN;\n                    break;\n                default:\n                    thisType = ClusterKind.NONE;\n            }\n\n            // Assign the type for each node\n            numbers.forEach((num) => {\n                nodes[num].clusterType = thisType;\n            });\n            clustersInfos[thisType] = color;\n        } else if (line.search('label') !== -1) {\n            const id = parseInt(line.slice(0, line.indexOf('[')).trim());\n            const attributes = line.slice(line.indexOf('[') + 1, line.lastIndexOf(']')).trim();\n\n            let label = attributes.slice(attributes.search(/[^\\\\]\"/) + 3);\n            label = label.slice(0, label.search(/[^\\\\]\"/));\n            let [conclusion, rule, args] = ['', '', ''];\n            [conclusion, rule] = label.split(/\\|/);\n            [rule, args] = rule.indexOf(' :args ') != -1 ? rule.split(' :args ') : [rule, ''];\n\n            const comment: string = removeEscapedCharacters(line.slice(line.indexOf('comment'), line.lastIndexOf('\"')));\n            const commentJSON = JSON.parse(comment.slice(comment.indexOf('\"') + 1).replace(/'/g, '\"'));\n\n            if (!nodes[id]) {\n                nodes[id] = {\n                    id: id,\n                    conclusion: '',\n                    rule: '',\n                    args: '',\n                    children: [],\n                    parents: [NaN],\n                    descendants: 0,\n                    dependencies: [],\n                    clusterType: ClusterKind.NONE,\n                };\n            }\n            nodes[id].conclusion = removeEscapedCharacters(conclusion);\n            nodes[id].rule = removeEscapedCharacters(rule);\n            nodes[id].args = removeEscapedCharacters(args);\n            nodes[id].descendants = commentJSON.subProofQty;\n        } else if (line.search('->') !== -1) {\n            const [child, parent] = line.split('->').map((x) => parseInt(x.trim()));\n            nodes[parent].children.push(child);\n            // If there isn't a child node\n            if (!nodes[child]) {\n                nodes[child] = {\n                    id: child,\n                    conclusion: '',\n                    rule: '',\n                    args: '',\n                    children: [],\n                    parents: [],\n                    descendants: 0,\n                    dependencies: [],\n                    clusterType: ClusterKind.NONE,\n                };\n            }\n            // If there is and is an invalid parent\n            else if (isNaN(nodes[child].parents[0])) {\n                nodes[child].parents = [];\n            }\n            nodes[child].parents.push(parent);\n        }\n    });\n\n    return comment ? [nodes, JSON.parse(comment)['letMap'], clustersInfos] : [nodes, {}, clustersInfos];\n}\n\nexport const piNodeParents = (\n    proof: NodeInterface[],\n    hiddenNodesArray: number[],\n    dependencies: { [parentId: number]: number[] } = {},\n): number[] => {\n    const parents = hiddenNodesArray\n        // Concat all the parents\n        .reduce((acc: number[], hiddenNode) => {\n            let haveHiddenParent = false;\n\n            proof[hiddenNode].parents.forEach((parent) => {\n                // If this parent is a hidden node\n                if (hiddenNodesArray.indexOf(parent) !== -1) {\n                    haveHiddenParent = true;\n                } else {\n                    dependencies[parent]\n                        ? dependencies[parent].push(hiddenNode)\n                        : (dependencies[parent] = [hiddenNode]);\n                }\n            });\n\n            if (haveHiddenParent) return acc;\n            return acc.concat(proof[hiddenNode].parents);\n        }, [])\n        // Filter the duplicated elements\n        .filter((parent, i, self) => self.indexOf(parent) === i)\n        // Only the parents that aren't in he hidden nodes array remains\n        .filter((parent) => hiddenNodesArray.indexOf(parent) === -1);\n\n    // Removes the pi node parents from the dependencies\n    Object.keys(dependencies).forEach((parent) => {\n        const n = Number(parent);\n        if (parents.indexOf(n) !== -1) delete dependencies[n];\n    });\n\n    return parents;\n};\n\nexport const descendants = (proof: NodeInterface[], nodeId: number): number[] => {\n    const validChildren = proof[nodeId].children.filter((node) => !proof[node].isHidden);\n    return validChildren.concat(\n        validChildren.reduce((acc: number[], childId) => {\n            return acc.concat(descendants(proof, childId));\n        }, []),\n    );\n};\n\nexport const piNodeChildren = (proof: NodeInterface[], hiddenNodesArray: number[]): number[] => {\n    const children = hiddenNodesArray\n        // Get all the childrens\n        .reduce((acc: number[], hiddenNode) => acc.concat(proof[hiddenNode].children), [])\n        // Exclude the childrens that are part of the hidden nodes\n        .filter((child) => hiddenNodesArray.indexOf(child) === -1);\n    return children;\n};\n\nexport const findNodesClusters = (proof: NodeInterface[], hiddenNodesArray: number[]): number[][] => {\n    const hiddenNodes = [...hiddenNodesArray];\n    const clusters: number[][] = [];\n    let clusteredNodes = 0;\n    const parents = hiddenNodes.map((hiddenNode) => proof[hiddenNode].parents);\n\n    // Cluster the nodes based on similiar parents\n    parents.forEach((parent, clusterID) => {\n        // If not all of the nodes where clustered and is a non empty cluster\n        if (clusteredNodes !== parents.length && parents[clusterID].length) {\n            clusters.push([]);\n            parents.forEach((p, hiddenID) => {\n                // If those nodes have some parent in commom and they weren't verified yet\n                if (parents[hiddenID].length && parent.some((_p) => p.indexOf(_p) !== -1)) {\n                    if (hiddenNodes[hiddenID]) clusters[clusters.length - 1].push(hiddenNodes[hiddenID]);\n                    // Removes these parents from the array, making shure they will not get verified again (already clustered)\n                    parents[hiddenID] = [];\n                    // Increases the number o clustered nodes\n                    clusteredNodes++;\n                }\n            });\n        }\n    });\n\n    let pastCluster: number[][] = [];\n    // Cluster the nodes until there aren't changes being made\n    while (JSON.stringify(pastCluster) != JSON.stringify(clusters)) {\n        pastCluster = [...clusters];\n        clusters.forEach((cluster, clusterID) => {\n            const clusterParents = proof[cluster[0]].parents;\n\n            // For each cluster\n            clusters.forEach((parentCluster, id) => {\n                // If this parentCluster (cluster) is parent of the current cluster\n                if (parentCluster.some((hiddenID) => clusterParents.indexOf(hiddenID) !== -1)) {\n                    // Group the nodes couple in one single cluster (the parent cluster)\n                    if (clusters[clusterID]) clusters[id] = clusters[id].concat(clusters[clusterID]);\n                    clusters.splice(clusterID, 1);\n                    clusterID--;\n                }\n            });\n        });\n    }\n\n    // Filter the nodes with length 1\n    return clusters.filter((cluster) => cluster.length > 1);\n};\n\nexport const groupPiNodeDependencies = (\n    proof: NodeInterface[],\n    hiddenNodesArray: number[],\n): NodeInterface['dependencies'] => {\n    const piNodeDependencies: NodeInterface['dependencies'] = [];\n    const depMap: { [piID: number]: number } = {};\n\n    // Copy all the hidden nodes dependencies to the new pi node\n    proof.forEach((node) => {\n        // Search for all the hidden nodes that have deps\n        if (hiddenNodesArray.indexOf(node.id) !== -1 && node.dependencies.length) {\n            // For each dependence in this node\n            node.dependencies.forEach((dep) => {\n                // This pi node dependence wasn't inserted yet\n                if (Object.keys(depMap).indexOf(String(dep.piId)) === -1) {\n                    piNodeDependencies.push(dep);\n                    depMap[dep.piId] = piNodeDependencies.length - 1;\n                }\n                // Concat the nodes inside the pi node already inserted\n                else {\n                    piNodeDependencies[depMap[dep.piId]].depsId = piNodeDependencies[depMap[dep.piId]].depsId.concat(\n                        dep.depsId,\n                    );\n                }\n            });\n        }\n    });\n    return piNodeDependencies;\n};\n\nexport const sliceNodesCluster = (\n    proof: NodeInterface[],\n    clusterMap: number[],\n    nodeId = 0,\n    slicedClusters: number[][] = [],\n): number[][] => {\n    const currentNode = proof[nodeId];\n\n    // If the node id is valid and wasn't inserted yet\n    if (nodeId && clusterMap[currentNode.id] === -1) {\n        // Get all parents with the same type\n        const parentsClusters: { [parentID: number]: number } = {};\n        for (let i = 0; i < currentNode.parents.length; i++) {\n            const p = currentNode.parents[i];\n            if (proof[p].clusterType === currentNode.clusterType) {\n                parentsClusters[p] = clusterMap[p];\n                break;\n            }\n        }\n\n        const keys = Object.keys(parentsClusters);\n\n        // If the current node has the same type as (at least) one of it's parents\n        if (keys.length) {\n            // Put the current node in the cluster of the first parent with the same type\n            const target = parentsClusters[Number(keys[0])];\n            slicedClusters[target].push(currentNode.id);\n            clusterMap[currentNode.id] = target;\n        }\n        // Parent with different type\n        else {\n            const clusterID = slicedClusters.length;\n            clusterMap[currentNode.id] = clusterID;\n            slicedClusters.push([currentNode.id]);\n\n            // Add the brothers with the same type in the same cluster\n            proof[currentNode.parents[0]].children.forEach((c) => {\n                // If the brother node has the same type as the current one\n                if (proof[c].clusterType === currentNode.clusterType && c !== currentNode.id) {\n                    slicedClusters[clusterID].push(c);\n                    clusterMap[c] = clusterID;\n                }\n            });\n        }\n    }\n\n    currentNode.children.forEach((child) => {\n        sliceNodesCluster(proof, clusterMap, child, slicedClusters);\n    });\n    return slicedClusters;\n};\n\nexport const extractTheoryLemmas = (\n    proof: NodeInterface[],\n    clusters: ProofState['clustersInfos'],\n    haveCluster: boolean,\n): ProofState['theoryLemmaMap'] => {\n    // If have clusters registered\n    if (haveCluster) {\n        return [proof[0].conclusion].concat(\n            clusters.filter((c) => c.type === ClusterKind.TL).map((c) => proof[c.hiddenNodes[0]].conclusion),\n        );\n    } else {\n        return proof.filter((n) => n.rule === 'SCOPE').map((n) => n.conclusion);\n    }\n};\n","export class BaseUndo {\n    nodes: number[];\n    name: string;\n\n    constructor(nodes: number[], name: string) {\n        this.nodes = nodes;\n        this.name = name;\n    }\n}\n\nexport class MoveUndo extends BaseUndo {\n    x: number;\n    y: number;\n\n    constructor(nodes: number[], x: number, y: number) {\n        super(nodes, 'MoveUndo');\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport class ColorUndo extends BaseUndo {\n    colorMap: { [color: string]: number[] };\n\n    constructor(nodes: number[], color: { [color: string]: number[] }) {\n        super(nodes, 'ColorUndo');\n        this.colorMap = color;\n    }\n}\n\nexport class UnfoldUndo extends BaseUndo {\n    positions: { id: number; x: number; y: number }[];\n    colors: { id: number; color: string }[];\n\n    constructor(\n        nodes: number[],\n        positions: { id: number; x: number; y: number }[],\n        colors: { id: number; color: string }[],\n    ) {\n        super(nodes, 'UnfoldUndo');\n        this.positions = positions;\n        this.colors = colors;\n    }\n}\n\nexport class FoldUndo extends BaseUndo {\n    positions: { id: number; x: number; y: number }[];\n\n    constructor(nodes: number[], positions: { id: number; x: number; y: number }[]) {\n        super(nodes, 'FoldUndo');\n        this.positions = positions;\n    }\n}\n\nexport class HideUndo extends BaseUndo {\n    positions: { id: number; x: number; y: number }[];\n    nPiNodes: number;\n\n    constructor(nodes: number[], positions: { id: number; x: number; y: number }[], nPiNodes: number) {\n        super(nodes, 'HideUndo');\n        this.positions = positions;\n        this.nPiNodes = nPiNodes;\n    }\n}\n","export const colorConverter = (colorName: string): string => {\n    let color = '#fff';\n    switch (colorName) {\n        case 'red':\n            color = '#f72b34';\n            break;\n        case 'orange':\n            color = '#ff8334';\n            break;\n        case 'yellow':\n            color = '#ffc149';\n            break;\n        case 'green':\n            color = '#60aa51';\n            break;\n        case 'blue':\n            color = '#0097e4';\n            break;\n        case 'purple':\n            color = '#a73da5';\n            break;\n        case 'brown':\n            color = '#a95a49';\n            break;\n        case 'black':\n            color = '#464646';\n            break;\n\n        case 'white':\n            color = '#f0f0f0';\n            break;\n    }\n    return color;\n};\n","import { FoldUndo, HideUndo, UnfoldUndo } from './../../../interfaces/undoClasses';\nimport { Draft, PayloadAction } from '@reduxjs/toolkit';\nimport { processDot, descendants, findNodesClusters, sliceNodesCluster, extractTheoryLemmas } from './auxi';\nimport { ExternalCmdState, ProofState } from '../../../interfaces/interfaces';\nimport { colorConverter } from '../theme/auxi';\nimport { BaseUndo, ColorUndo, MoveUndo } from '../../../interfaces/undoClasses';\nimport Deque from 'double-ended-queue';\n\nconst STACK_MAX_SIZE = 20;\nconst LARGE_PROOF_SIZE = 1000 as const;\nconst undoQueue = new Deque<BaseUndo>();\n\nfunction addUndo(undo: BaseUndo): void {\n    // Ensures max size\n    if (undoQueue.length === STACK_MAX_SIZE) undoQueue.shift();\n    // Add to stack\n    undoQueue.push(undo);\n}\n\nfunction clearUndo(): void {\n    undoQueue.clear();\n}\n\nfunction clearHiddenNodes(state: Draft<ProofState>, action: PayloadAction<null>): void {\n    state.hiddenNodes.forEach((hiddenArray) => hiddenArray.forEach((node) => (state.proof[node].isHidden = undefined)));\n    state.hiddenNodes = [];\n}\n\nfunction process(state: Draft<ProofState>, action: PayloadAction<string>): void {\n    // Reset the state\n    state.clustersInfos = [];\n    state.nodesSelected = [];\n    state.hiddenNodes = [];\n\n    let proofJSON;\n    let dot = action.payload;\n    let isJSON = false;\n\n    // If the payload is a .json file\n    if (dot.indexOf('{\"dot\":\"') !== -1) {\n        proofJSON = JSON.parse(dot);\n        dot = proofJSON.dot;\n        isJSON = true;\n    }\n\n    const [proof, letMap, clustersColors] = processDot(dot);\n    state.proof = proof;\n    state.letMap = letMap;\n    state.view = 'full';\n\n    // If there are clusters\n    let clusters: number[][] = [];\n    if (Object.keys(clustersColors).length) {\n        state.view = 'clustered';\n\n        // Slice the clusters\n        const clustersMap: number[] = Array(state.proof.length).fill(-1);\n        clusters = sliceNodesCluster(state.proof, clustersMap);\n\n        // Maps the cluster infos\n        clusters.forEach((cluster) => {\n            const type = state.proof[cluster[0]].clusterType;\n            state.clustersInfos.push({\n                hiddenNodes: cluster,\n                type: type,\n                color: colorConverter(clustersColors[type]),\n            });\n        });\n\n        // Extract the theory lemmas\n        state.theoryLemmaMap = extractTheoryLemmas(state.proof, state.clustersInfos, true);\n    } else {\n        state.theoryLemmaMap = extractTheoryLemmas(state.proof, state.clustersInfos, false);\n    }\n\n    if (isJSON) {\n        state.view = proofJSON.view;\n        state.hiddenNodes = proofJSON.hiddenNodes;\n        state.visualInfo = proofJSON.visualInfo;\n        // Make sure the nodes that were selected stay selected\n        const size = state.proof.length + state.hiddenNodes.length;\n        for (let i = 0; i < size; i++) {\n            if (state.visualInfo[i].selected) state.nodesSelected.push(i);\n        }\n    }\n    // Is .dot\n    else {\n        // Init the visual info\n        state.visualInfo = {};\n        state.proof.forEach((node) => {\n            state.visualInfo[node.id] = {\n                color: '#fff',\n                x: 0,\n                y: 0,\n                selected: false,\n            };\n        });\n\n        let size = state.proof.length;\n        state.clustersInfos.forEach(({ hiddenNodes, color }) => {\n            let index;\n            if (hiddenNodes.length > 1) {\n                state.hiddenNodes.push(hiddenNodes);\n                index = size++;\n            } else index = hiddenNodes[0];\n            state.visualInfo[index] = {\n                color: color,\n                x: 0,\n                y: 0,\n                selected: false,\n            };\n        });\n    }\n    // Set all the hidden nodes as hidden\n    state.hiddenNodes.forEach((hiddenNodesArray, i) => {\n        const piID = state.proof.length + i;\n        hiddenNodesArray.forEach((node) => (state.proof[node].isHidden = piID));\n    });\n\n    // Fold nodes if proof is too large\n    if (state.proof.length > LARGE_PROOF_SIZE) {\n        let piNode = { id: -1, max: -1 };\n        state.proof.forEach((node) => {\n            // id >=5 is an arbitrary value\n            if (node.id >= 5 && node.descendants > piNode.max) {\n                piNode = {\n                    id: node.id,\n                    max: node.descendants,\n                };\n            }\n        });\n        foldAllDescendants(state, { payload: piNode.id } as PayloadAction<number>);\n    }\n}\n\nfunction hideNodes(state: Draft<ProofState>, action: PayloadAction<void>): void {\n    const size = state.proof.length + state.hiddenNodes.length;\n\n    const toHideNodes = state.nodesSelected.filter(\n        (id) => id > 0 && id < state.proof.length && !state.proof[id].isHidden,\n    );\n\n    const clusters = findNodesClusters(state.proof, toHideNodes);\n    // If there are clusters to hide\n    if (clusters.length) {\n        clusters.forEach((cluster) => state.hiddenNodes.push(cluster));\n\n        // Save the position of all nodes\n        const pos: { id: number; x: number; y: number }[] = [];\n        for (let id = 0; id < size; id++) {\n            pos.push({ id: id, x: state.visualInfo[id].x, y: state.visualInfo[id].y });\n        }\n\n        // Set the visual info for the new pi nodes\n        clusters.forEach((cluster, i) => {\n            const piID = size + i;\n            state.visualInfo[piID] = {\n                color: '#555',\n                x: 0,\n                y: 0,\n                selected: false,\n            };\n\n            cluster.forEach((nodeID) => (state.proof[nodeID].isHidden = piID));\n        });\n\n        // Add undo action\n        addUndo(new HideUndo([], pos, clusters.length));\n    }\n    // Unselect the selected nodes\n    toHideNodes.forEach((id) => (state.visualInfo[id].selected = false));\n    // Unselect all the nodes\n    unselectNodes(state, { payload: { nodes: state.nodesSelected, cleanAll: true }, type: 'string' });\n}\n\nfunction foldAllDescendants(state: Draft<ProofState>, action: PayloadAction<number>): void {\n    const size = state.proof.length + state.hiddenNodes.length;\n    const hashMap: { [nodeID: number]: boolean } = {};\n    const newHidden = [action.payload, ...descendants(state.proof, action.payload)].filter((id) => {\n        let isTheFirst = true;\n        if (hashMap[id]) isTheFirst = false;\n        else hashMap[id] = true;\n\n        return id > 0 && id < state.proof.length && isTheFirst && !state.proof[id].isHidden;\n    });\n\n    // If the array is valid to become a pi node\n    if (newHidden.length > 1) {\n        state.hiddenNodes.push(newHidden);\n        newHidden.forEach((nodeID) => {\n            state.proof[nodeID].isHidden = size;\n            state.visualInfo[nodeID].selected = false;\n        });\n\n        // Set the visual info for the new pi node and the root node\n        state.visualInfo[action.payload].selected = false;\n        state.visualInfo[size] = {\n            color: '#555',\n            x: 0,\n            y: 0,\n            selected: false,\n        };\n\n        // Save the position of all nodes\n        const pos: { id: number; x: number; y: number }[] = [];\n        for (let id = 0; id < size; id++) {\n            pos.push({ id: id, x: state.visualInfo[id].x, y: state.visualInfo[id].y });\n        }\n\n        // Add undo action\n        addUndo(new FoldUndo([], pos));\n        // Unselect all the nodes\n        unselectNodes(state, { payload: { nodes: state.nodesSelected, cleanAll: true }, type: 'string' });\n    }\n}\n\nfunction unfoldNodes(state: Draft<ProofState>, action: PayloadAction<number>): void {\n    const pi = action.payload;\n    const hiddenID = pi - state.proof.length;\n    const hiddens = state.hiddenNodes[hiddenID];\n    const size = state.proof.length + state.hiddenNodes.length;\n    const color = state.visualInfo[pi].color;\n\n    // Save all the positions\n    const pos: { id: number; x: number; y: number }[] = [];\n    for (let id = 0; id < size; id++) {\n        pos.push({ id: id, x: state.visualInfo[id].x, y: state.visualInfo[id].y });\n    }\n\n    // Unselect the hidden nodes and set their color equal to the pi node\n    const colors: { id: number; color: string }[] = [];\n    hiddens.forEach((id) => {\n        // Save all the hidden nodes colors\n        colors.push({ id: id, color: state.visualInfo[id].color });\n        // Signalize nodes are unhided\n        state.proof[id].isHidden = undefined;\n        state.visualInfo[id] = {\n            ...state.visualInfo[id],\n            color: color !== '#555' ? color : state.visualInfo[id].color,\n            selected: false,\n        };\n    });\n    colors.push({ id: pi, color: color });\n\n    // Remove the pi node array\n    state.hiddenNodes.splice(hiddenID, 1);\n\n    // Make sure the ids are realocated\n    for (let i = pi; i < size - 1; i++) {\n        state.visualInfo[i] = state.visualInfo[i + 1];\n    }\n    // Delete the last position\n    delete state.visualInfo[size - 1];\n\n    // Add undo action\n    addUndo(new UnfoldUndo([...hiddens], pos, colors));\n    // Unselect all the nodes\n    unselectNodes(state, { payload: { nodes: state.nodesSelected, cleanAll: true }, type: 'string' });\n}\n\nfunction unfoldNextNode(state: Draft<ProofState>, action: PayloadAction<number>): void {\n    const pi = action.payload;\n    const hiddenID = pi - state.proof.length;\n    const hiddens = state.hiddenNodes[hiddenID];\n    const size = state.proof.length + state.hiddenNodes.length;\n    const color = state.visualInfo[pi].color;\n\n    // Save all the positions\n    const pos: { id: number; x: number; y: number }[] = [];\n    for (let id = 0; id < size; id++) {\n        pos.push({ id: id, x: state.visualInfo[id].x, y: state.visualInfo[id].y });\n    }\n\n    // Unselect the hidden nodes and set their color equal to the pi node\n    const colors: { id: number; color: string }[] = [];\n    const firstHidden = hiddens[0];\n    // Save all the hidden nodes colors\n    colors.push({ id: firstHidden, color: state.visualInfo[firstHidden].color });\n    // Signalize nodes are unhided\n    state.proof[firstHidden].isHidden = undefined;\n    state.visualInfo[firstHidden] = {\n        ...state.visualInfo[firstHidden],\n        color: color !== '#555' ? color : state.visualInfo[firstHidden].color,\n        selected: false,\n    };\n    colors.push({ id: pi, color: color });\n    state.hiddenNodes[hiddenID].splice(0, 1);\n\n    // we need to call findNodeClusters to find out if the hidden nodes are clusterable.\n    // if they are clusterable, we can just show the next node.\n    // Otherwise, we need to show all the hidden nodes\n    const nodeClusters = findNodesClusters(state.proof, state.hiddenNodes[hiddenID]);\n    if (nodeClusters.length) {\n        // Save the hidden nodes before we mutate it\n        // It will be used to reset the isHidden status of the nodes that are not longer hidden\n        const prevHiddenNodes = state.hiddenNodes[hiddenID];\n\n        // Remove the pi node array\n        state.hiddenNodes.splice(hiddenID, 1);\n\n        // add the clusters to the hidden nodes state\n        nodeClusters.forEach((cluster) => {\n            state.hiddenNodes.push(cluster);\n        });\n\n        // Contains all the nodes that should be hidden\n        const flatSet = new Set();\n        state.hiddenNodes.forEach((hidVec) => hidVec.forEach((node) => flatSet.add(node)));\n        prevHiddenNodes.forEach((node) => {\n            // If the current node was removed from any of the clusters, then we should set him as visible\n            if (!flatSet.has(node)) {\n                state.proof[node].isHidden = undefined;\n            }\n        });\n\n        // update visual info\n        nodeClusters.forEach((_cluster, i) => {\n            const piID = size + i;\n            state.visualInfo[piID] = {\n                color: '#555',\n                x: 0,\n                y: 0,\n                selected: false,\n            };\n        });\n    } else {\n        // Updates all the hidden nodes infos since they are no longer hidden\n        state.hiddenNodes[hiddenID].forEach((id) => {\n            // Save all the hidden nodes colors\n            colors.push({ id: id, color: state.visualInfo[id].color });\n            // Signalize nodes are unhided\n            state.proof[id].isHidden = undefined;\n            // update visual info\n            state.visualInfo[id] = {\n                ...state.visualInfo[id],\n                color: color !== '#555' ? color : state.visualInfo[id].color,\n                selected: false,\n            };\n        });\n        // Removes this pi node\n        state.hiddenNodes.splice(hiddenID, 1);\n    }\n    // Make sure the ids are realocated\n    for (let i = pi; i < size - 1; i++) {\n        state.visualInfo[i] = state.visualInfo[i + 1];\n    }\n    // Add undo action\n    addUndo(new UnfoldUndo([...hiddens], pos, colors));\n    // Unselect all the nodes\n    unselectNodes(state, { payload: { nodes: state.nodesSelected, cleanAll: true }, type: 'string' });\n}\n\nfunction setVisualInfo(state: Draft<ProofState>, action: PayloadAction<ProofState['visualInfo']>): void {\n    state.visualInfo = action.payload;\n}\n\nfunction selectByArea(state: Draft<ProofState>, action: PayloadAction<ExternalCmdState['selectData']['square']>): void {\n    const { upperL, lowerR } = action.payload;\n    const size = state.proof.length + state.hiddenNodes.length;\n    for (let i = 0; i < size; i++) {\n        const thisNode = state.visualInfo[i];\n        if (\n            upperL.x <= thisNode.x &&\n            thisNode.x <= lowerR.x &&\n            upperL.y <= thisNode.y &&\n            thisNode.y <= lowerR.y &&\n            !thisNode.selected\n        ) {\n            thisNode.selected = true;\n            state.nodesSelected.push(i);\n        }\n    }\n}\n\nfunction unselectByArea(\n    state: Draft<ProofState>,\n    action: PayloadAction<ExternalCmdState['selectData']['square']>,\n): void {\n    const { upperL, lowerR } = action.payload;\n    const size = state.proof.length + state.hiddenNodes.length;\n    for (let i = 0; i < size; i++) {\n        const thisNode = state.visualInfo[i];\n        if (\n            upperL.x <= thisNode.x &&\n            thisNode.x <= lowerR.x &&\n            upperL.y <= thisNode.y &&\n            thisNode.y <= lowerR.y &&\n            thisNode.selected\n        ) {\n            thisNode.selected = false;\n            state.nodesSelected = state.nodesSelected.filter((node) => node !== i);\n        }\n    }\n}\n\nfunction selectNodes(state: Draft<ProofState>, action: PayloadAction<number[]>): void {\n    const len = state.proof.length + state.hiddenNodes.length;\n    action.payload.forEach((id) => {\n        if (id >= 0 && id < len) {\n            if (!state.visualInfo[id].selected) state.nodesSelected.push(id);\n            state.visualInfo[id].selected = true;\n        }\n    });\n}\n\nfunction unselectNodes(state: Draft<ProofState>, action: PayloadAction<{ nodes: number[]; cleanAll: boolean }>): void {\n    const len = state.proof.length + state.hiddenNodes.length;\n    action.payload.nodes.forEach((id) => {\n        if (id >= 0 && id < len) {\n            state.visualInfo[id].selected = false;\n        }\n    });\n    // Allow faster clear of all the nodes selected\n    if (action.payload.cleanAll) state.nodesSelected = [];\n    else state.nodesSelected = state.nodesSelected.filter((node) => action.payload.nodes.indexOf(node) === -1);\n}\n\nfunction changeStyle(state: Draft<ProofState>, action: PayloadAction<ProofState['style']>): void {\n    switch (action.payload) {\n        case 'graph':\n            state.style = 'graph';\n            break;\n        case 'directory':\n            state.style = 'directory';\n            break;\n    }\n}\n\nfunction applyView(state: Draft<ProofState>, action: PayloadAction<ProofState['view']>): void {\n    // Unselect all the nodes\n    unselectNodes(state, { payload: { nodes: state.nodesSelected, cleanAll: true }, type: 'string' });\n    // Delete all the pi nodes visual info\n    for (let i = state.proof.length; i < state.proof.length + state.hiddenNodes.length; i++) {\n        delete state.visualInfo[i];\n    }\n    clearUndo();\n\n    switch (action.payload) {\n        // View without hidden Nodes\n        case 'full':\n            if (state.hiddenNodes.length || state.view === 'colored-full') {\n                state.proof.forEach((node) => {\n                    state.visualInfo[node.id] = {\n                        color: '#fff',\n                        x: 0,\n                        y: 0,\n                        selected: false,\n                    };\n                });\n\n                clearHiddenNodes(state, { payload: null, type: 'string' });\n            }\n            state.view = 'full';\n            break;\n        // Cluster all the nodes in your respective group\n        case 'clustered':\n            // If there are clusters infos\n            if (state.clustersInfos.length) {\n                state.view = 'clustered';\n\n                clearHiddenNodes(state, { payload: null, type: 'string' });\n                let size = state.proof.length;\n\n                state.clustersInfos.forEach(({ hiddenNodes, color }) => {\n                    let index;\n                    if (hiddenNodes.length > 1) {\n                        state.hiddenNodes.push(hiddenNodes);\n                        hiddenNodes.forEach((node) => (state.proof[node].isHidden = size));\n                        index = size++;\n                    }\n                    // Cluster with 1 node\n                    else index = hiddenNodes[0];\n\n                    state.visualInfo[index] = {\n                        color: color,\n                        x: 0,\n                        y: 0,\n                        selected: false,\n                    };\n                });\n            }\n            break;\n        // Apply full view but apply the clustrer color\n        case 'colored-full':\n            state.view = 'colored-full';\n            clearHiddenNodes(state, { payload: null, type: 'string' });\n\n            // If there are clusters infos\n            if (state.clustersInfos.length) {\n                state.clustersInfos.forEach((cluster) => {\n                    cluster.hiddenNodes.forEach((node) => {\n                        state.visualInfo[node] = {\n                            color: cluster.color,\n                            x: 0,\n                            y: 0,\n                            selected: false,\n                        };\n                    });\n                });\n            }\n            break;\n    }\n}\n\nfunction applyColor(state: Draft<ProofState>, action: PayloadAction<string>): void {\n    const colorMap: { [color: string]: number[] } = {};\n    //  Lembrar de iterar por nodesSelected\n    state.nodesSelected.forEach((nodeID) => {\n        const thisInfo = state.visualInfo[nodeID];\n        if (colorMap[thisInfo.color]) colorMap[thisInfo.color].push(nodeID);\n        else {\n            colorMap[thisInfo.color] = [nodeID];\n        }\n\n        thisInfo.color = action.payload;\n    });\n\n    if (state.nodesSelected.length) addUndo(new ColorUndo([], colorMap));\n    // Unselect all the nodes\n    unselectNodes(state, { payload: { nodes: state.nodesSelected, cleanAll: true }, type: 'string' });\n}\n\nfunction moveNode(state: Draft<ProofState>, action: PayloadAction<{ id: number; x: number; y: number }>): void {\n    const { id, x, y } = action.payload;\n    addUndo(new MoveUndo([id], state.visualInfo[id].x, state.visualInfo[id].y));\n\n    // Update the position\n    state.visualInfo[id].x = x;\n    state.visualInfo[id].y = y;\n}\n\nfunction setSmt(state: Draft<ProofState>, action: PayloadAction<string>): void {\n    state.smt = action.payload;\n}\n\nfunction undo(state: Draft<ProofState>, action: PayloadAction<void>): void {\n    const topUndo = undoQueue.pop();\n    if (topUndo) {\n        const { nodes, name } = topUndo;\n        if (name === 'MoveUndo') {\n            const { x, y } = topUndo as MoveUndo;\n            state.visualInfo[nodes[0]] = {\n                ...state.visualInfo[nodes[0]],\n                x,\n                y,\n            };\n        } else if (name === 'ColorUndo') {\n            const { colorMap } = topUndo as ColorUndo;\n            Object.keys(colorMap).forEach((color) => {\n                colorMap[color].forEach((node) => (state.visualInfo[node].color = color));\n            });\n        } else {\n            // Unselect all the nodes\n            unselectNodes(state, { payload: { nodes: state.nodesSelected, cleanAll: true }, type: 'string' });\n\n            if (name === 'FoldUndo') {\n                const { positions } = topUndo as FoldUndo;\n                // Make sure the node is not hidden\n                state.hiddenNodes[state.hiddenNodes.length - 1].forEach(\n                    (node) => (state.proof[node].isHidden = undefined),\n                );\n                // Remove the old pi node\n                state.hiddenNodes.splice(state.hiddenNodes.length - 1, 1);\n                delete state.visualInfo[state.proof.length + state.hiddenNodes.length];\n                // Put all the nodes in the older position\n                positions.forEach(({ id, x, y }) => {\n                    state.visualInfo[id].x = x;\n                    state.visualInfo[id].y = y;\n                });\n            } else if (name === 'HideUndo') {\n                const { positions, nPiNodes } = topUndo as HideUndo;\n                // Remove the old pi nodes\n                for (let len = state.proof.length + state.hiddenNodes.length, i = 0; i < nPiNodes; i++) {\n                    delete state.visualInfo[--len];\n                    // Make sure the node is not hidden\n                    state.hiddenNodes[nPiNodes - i - 1].forEach((node) => (state.proof[node].isHidden = undefined));\n                }\n                state.hiddenNodes.splice(state.hiddenNodes.length - nPiNodes, nPiNodes);\n\n                // Put all the nodes in the older position\n                positions.forEach(({ id, x, y }) => {\n                    state.visualInfo[id].x = x;\n                    state.visualInfo[id].y = y;\n                });\n            } else if (name === 'UnfoldUndo') {\n                const { positions, colors } = topUndo as UnfoldUndo;\n                let i;\n                // Create the old pi node in the right position\n                const oldPiNum = colors[colors.length - 1].id;\n                const newSize = state.proof.length + state.hiddenNodes.length;\n                state.hiddenNodes.splice(oldPiNum - state.proof.length, 0, nodes);\n                // Make sure all the hidden nodes will be signalized as hidden\n                nodes.forEach((nodeID) => (state.proof[nodeID].isHidden = oldPiNum));\n                // Shift the pi nodes visual info\n                for (i = newSize; i > oldPiNum; i--) {\n                    state.visualInfo[i] = state.visualInfo[i - 1];\n                }\n                state.visualInfo[i] = { x: 0, y: 0, color: '', selected: false };\n                // Put all the nodes in the older position\n                positions.forEach(({ id, x, y }) => {\n                    state.visualInfo[id].x = x;\n                    state.visualInfo[id].y = y;\n                });\n                // Set the old color of all the hidden nodes\n                colors.forEach(({ id, color }) => {\n                    state.visualInfo[id].color = color;\n                });\n            }\n        }\n    }\n}\n\nconst reducers = {\n    process,\n    hideNodes,\n    foldAllDescendants,\n    unfoldNodes,\n    unfoldNextNode,\n    setVisualInfo,\n    selectByArea,\n    unselectByArea,\n    selectNodes,\n    unselectNodes,\n    changeStyle,\n    applyView,\n    applyColor,\n    moveNode,\n    setSmt,\n    undo,\n};\n\nexport default reducers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../store';\nimport { piNodeChildren, piNodeParents, groupPiNodeDependencies } from './auxi';\nimport { NodeInterface, ProofState } from '../../../interfaces/interfaces';\nimport { ClusterKind } from '../../../interfaces/enum';\nimport reducers from './reducers';\n\nconst initialState: ProofState = {\n    proof: [],\n    view: 'full',\n    style: 'graph',\n    hiddenNodes: [],\n    letMap: {},\n    theoryLemmaMap: [],\n    visualInfo: {},\n    nodesSelected: [],\n    clustersInfos: [],\n    smt: '',\n};\n\nexport const proofSlice = createSlice({\n    name: 'proof',\n    initialState,\n    reducers: reducers,\n});\n\nexport const {\n    process,\n    hideNodes,\n    foldAllDescendants,\n    unfoldNodes,\n    unfoldNextNode,\n    setVisualInfo,\n    selectByArea,\n    unselectByArea,\n    selectNodes,\n    unselectNodes,\n    changeStyle,\n    applyView,\n    applyColor,\n    moveNode,\n    setSmt,\n    undo,\n} = proofSlice.actions;\n\nexport const selectProof = (state: RootState): NodeInterface[] => {\n    let proof = state.proof.proof;\n    const hiddenNodes = state.proof.hiddenNodes;\n\n    hiddenNodes.forEach((hiddenNodesArray) => {\n        const dependencies: { [parentId: number]: number[] } = {};\n        const children = piNodeChildren(proof, hiddenNodesArray);\n        const parents = piNodeParents(proof, hiddenNodesArray, dependencies);\n        const piNodeDependencies = groupPiNodeDependencies(proof, hiddenNodesArray);\n\n        const piNodeId = proof.length;\n        proof = proof.concat({\n            id: piNodeId,\n            conclusion: '∴',\n            rule: 'π',\n            args: '',\n            children: children,\n            parents: parents,\n            hiddenNodes: hiddenNodesArray.map((hiddenNode) => proof[hiddenNode]),\n            descendants: 1,\n            dependencies: piNodeDependencies,\n            clusterType: ClusterKind.NONE,\n        });\n\n        const piNode = proof[piNodeId];\n\n        children.forEach(\n            (childId) =>\n                (proof[childId] = {\n                    ...proof[childId],\n                    parents: proof[childId].parents\n                        .concat([piNodeId])\n                        .filter((proofNode) => hiddenNodesArray.indexOf(proofNode) === -1),\n                }),\n        );\n        parents.forEach(\n            (parentId) =>\n                (proof[parentId] = {\n                    ...proof[parentId],\n                    children: proof[parentId].children\n                        .concat([piNodeId])\n                        .filter((proofNode) => hiddenNodesArray.indexOf(proofNode) === -1),\n                }),\n        );\n\n        // Set the dependencies array of each parent that has deps and remove\n        //  the children that are dependencies\n        Object.keys(dependencies).forEach((parent) => {\n            const parentId = Number(parent);\n            proof[parentId] = {\n                ...proof[parentId],\n                children: proof[parentId].children.filter((c) => dependencies[parentId].indexOf(c) === -1),\n                dependencies: [...proof[parentId].dependencies, { piId: piNodeId, depsId: dependencies[parentId] }],\n            };\n        });\n\n        // Get the high hierarchy nodes in this pi node\n        const highHierarchyNodes = hiddenNodesArray?.filter((node) =>\n            proof[node].parents.every((parentId) => piNode.parents.indexOf(parentId) !== -1),\n        );\n\n        // Get the conclusion array\n        const conclusion = highHierarchyNodes.map((node) => ' ' + proof[node].conclusion);\n        piNode.conclusion = conclusion.length > 1 ? `[${conclusion} ]` : `${conclusion}`;\n\n        // Get the rule array\n        const rule = highHierarchyNodes.map((node) => ' ' + proof[node].rule);\n        piNode.rule = rule.length > 1 ? `[${rule} ]` : `${rule} `;\n\n        // Set the descendants number\n        piNode.descendants = piNode.children.reduce(\n            (ac: number, childID) => ((ac += proof[childID].descendants), ac),\n            1,\n        );\n    });\n\n    proof = proof.filter((proofNode) =>\n        hiddenNodes.every((hiddenNodesArray) => hiddenNodesArray.indexOf(proofNode.id) === -1),\n    );\n\n    return proof;\n};\n\nexport const selectOriginalProof = (state: RootState): NodeInterface[] => {\n    return state.proof.proof;\n};\n\nexport const selectView = (state: RootState): ProofState['view'] => {\n    return state.proof.view;\n};\n\nexport const selectStyle = (state: RootState): 'graph' | 'directory' => {\n    return state.proof.style;\n};\n\nexport const selectLetMap = (state: RootState): { [Key: string]: string } => {\n    return state.proof.letMap;\n};\n\nexport const selectTheoryLemmas = (state: RootState): ProofState['theoryLemmaMap'] => {\n    return state.proof.theoryLemmaMap;\n};\n\nexport const selectVisualInfo = (state: RootState): ProofState['visualInfo'] => {\n    if (state.proof.proof.length) return state.proof.visualInfo;\n    // If there is no proof node\n    return { 0: { color: '#555', x: 0, y: 0, selected: false } };\n};\n\nexport const selectHiddenNodes = (state: RootState): number[][] => {\n    return state.proof.hiddenNodes;\n};\n\nexport const selectNodeClusters = (state: RootState): ProofState['clustersInfos'] => {\n    return state.proof.clustersInfos;\n};\n\nexport const selectSmt = (state: RootState): ProofState['smt'] => {\n    return state.proof.smt;\n};\n\nexport const selectNodesSelected = (state: RootState): ProofState['nodesSelected'] => {\n    return state.proof.nodesSelected;\n};\n\nexport default proofSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../store';\nimport { ExternalCmdState } from '../../../interfaces/interfaces';\n\nconst initialState: ExternalCmdState = {\n    findData: {\n        nodeToFind: -1,\n        findOption: false,\n    },\n    renderData: {\n        count: 0,\n        fileChanged: false,\n    },\n    spinner: 'off',\n    selectData: { type: false, square: { upperL: { x: -1, y: -1 }, lowerR: { x: -1, y: -1 } } },\n};\n\nexport const externalCmd = createSlice({\n    name: 'externalCmd',\n    initialState,\n    reducers: {\n        findNode: (state, action: PayloadAction<{ nodeId: number; option: boolean }>) => {\n            state.findData = { nodeToFind: action.payload.nodeId, findOption: action.payload.option };\n        },\n        reRender: (state) => {\n            state.renderData.count = 0;\n        },\n        addRenderCount: (state) => {\n            state.renderData.count++;\n        },\n        blockRender: (state) => {\n            state.renderData.count = 2;\n        },\n        allowRenderNewFile: (state) => {\n            state.renderData.fileChanged = true;\n        },\n        blockRenderNewFile: (state) => {\n            state.renderData.fileChanged = false;\n        },\n        setSpinner: (state, action: PayloadAction<'off' | 'cvc5' | 'render'>) => {\n            state.spinner = action.payload;\n        },\n        setSelectArea: (state, action: PayloadAction<ExternalCmdState['selectData']>) => {\n            state.selectData = action.payload;\n        },\n    },\n});\n\nexport const {\n    findNode,\n    reRender,\n    addRenderCount,\n    blockRender,\n    allowRenderNewFile,\n    blockRenderNewFile,\n    setSpinner,\n    setSelectArea,\n} = externalCmd.actions;\n\nexport const selectFindData = (state: RootState): { nodeToFind: number; findOption: boolean } =>\n    state.externalCmd.findData;\n\nexport const selectRenderData = (state: RootState): { count: number; fileChanged: boolean } =>\n    state.externalCmd.renderData;\n\nexport const selectSpinner = (state: RootState): ExternalCmdState['spinner'] => state.externalCmd.spinner;\n\nexport const selectSelectData = (state: RootState): ExternalCmdState['selectData'] => state.externalCmd.selectData;\n\nexport default externalCmd.reducer;\n","import React, { useEffect, useReducer, useRef, useState } from 'react';\n\nimport MonacoEditor from '@monaco-editor/react';\nimport { Drawer, Position, Classes, Button, Alert } from '@blueprintjs/core';\n\nimport { selectTheme } from '../../store/features/theme/themeSlice';\nimport { SmtDrawerProps } from '../../interfaces/interfaces';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\n\nimport { selectSmt, setSmt } from '../../store/features/proof/proofSlice';\nimport Module from '../../wasm/cvc5';\nimport { setSpinner } from '../../store/features/externalCmd/externalCmd';\n\nimport Cvc5Output from '../Cvc5Output/Cvc5Output'\n\nimport '../../scss/VisualizerSmtDrawer.scss';\n\nconst VisualizerSmtDrawer: React.FC<SmtDrawerProps> = ({\n    isOpen,\n    setDrawerIsOpen,\n    addErrorToast,\n}: SmtDrawerProps) => {\n    const darkTheme = useAppSelector(selectTheme);\n    const proofSmt = useAppSelector(selectSmt);\n\n    const stdoutRef = useRef('');\n    const stderrRef = useRef('');\n    const changeOutRef = useRef(false);\n\n    const [updateCounter, forceUpdate] = useReducer((x) => x + 1, 0);\n    const [errorCounter, forceError] = useReducer((x) => x + 1, 0);\n    const [optionsIsOpen, setOptionsIsOpen] = useReducer((open) => !open, false);\n    const textRef = useRef(proofSmt + '\\n');\n    // const [argsType, setArgsType] = useState(smtOptions.argsType);\n    // const [[shouldClusterize, printAsDag], setDefaultOptions] = useState([false, false]);\n    // const [customArgs, setCustomArgs] = useState(smtOptions.customArgs);\n    const [err, setErr] = useState('');\n\n    // The default arguments used in the proof generation\n    // good for testing --dump-proofs\n    const defaultArgs = ['']\n    // var currentOutput = '';\n    const [currentOutput, setCurrentOutput] = useState('');\n    const [inputFlags, setInputFlags] = useState('');\n    // var inputFlags = '';\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        textRef.current = proofSmt;\n        forceUpdate();\n    }, [proofSmt]);\n\n    useEffect(() => {\n        textRef.current = proofSmt;\n        forceUpdate();\n    }, [currentOutput]);\n\n    useEffect(() => {\n        if (errorCounter) addErrorToast(err);\n    }, [errorCounter]);\n\n    const options = {\n        theme: darkTheme ? 'vs-dark' : 'vs',\n        tabIndex: 5,\n    };\n\n    const on : \"off\" | \"on\" | \"wordWrapColumn\" | \"bounded\" = \"on\"\n    const off : \"off\" | \"on\" | \"wordWrapColumn\" | \"bounded\" = \"off\"\n    const outputOptions = {\n        theme: darkTheme ? 'vs-dark' : 'vs',\n        tabIndex: 5,\n        readOnly: true,\n        wordWrap: on,\n        lineNumbers: off\n    };\n\n    const divColor = darkTheme ? 'rgb(255, 255, 255, 0.15)' : 'rgb(0, 0, 0, 0.15)';\n\n    // Remove the cvc5> prompt message from the stdout\n    const sanitizeDotResult = (result: string): string => result.replaceAll(/(cvc5> )+/g, '');\n    const updateStdout = (str: string) => (stdoutRef.current += str + '\\n');\n    const updateStderr = (str: string) => (stderrRef.current += str + '\\n');\n    // Function called post the cvc5 execution\n    const postCVC5run = (isThereError: boolean) => {\n        // Sanitize the string\n        // console.log(stdoutRef.current)\n        setCurrentOutput(stdoutRef.current);\n        stdoutRef.current = sanitizeDotResult(stdoutRef.current).trim();\n        // If there was an error\n        if (isThereError && !stdoutRef.current.length) {\n            // Change the spin message to render\n            dispatch(setSpinner('off'));\n\n            setErr(\n                stderrRef.current.length\n                    ? stderrRef.current\n                    : 'Error: Unknown error, check out the arguments parsed or the smt text.',\n            );\n            forceError();\n        }\n    };\n\n    // Clean the output a single time during the cvc5 execution\n    const cleanStdout = () => {\n        // console.log(\"cleanStdout\");\n        if (!changeOutRef.current) {\n            stdoutRef.current = '';\n            changeOutRef.current = true;\n        }\n    };\n\n    return (\n        <Drawer\n            className={`smt-drawer ${darkTheme ? 'bp3-dark' : ''}`}\n            style={{ height: '100%', width: '75%', margin: 'auto' }}\n            autoFocus={true}\n            canEscapeKeyClose={true}\n            canOutsideClickClose={false}\n            enforceFocus={false}\n            hasBackdrop={false}\n            isOpen={isOpen}\n            position={Position.TOP}\n            usePortal={false}\n            onClose={(e) => {\n                e.preventDefault();\n                setDrawerIsOpen(false);\n                // Save the smt\n                dispatch(setSmt(textRef.current));\n            }}\n            icon=\"code\"\n            title=\"cvc5 input\"\n        >\n            <div className={Classes.DRAWER_BODY} style={{ overflow: 'hidden' }}>\n                <MonacoEditor\n                    height={'600px'}\n                    language=\"graphql\"\n                    value={textRef.current}\n                    onChange={(value) => value !== undefined && (textRef.current = value)}\n                    onMount={() => forceUpdate()}\n                    options={options}\n                />\n            </div>\n            <div className={Classes.DRAWER_FOOTER}>\n                <footer\n                        style={{\n                            position: 'relative',\n                            borderTop: optionsIsOpen ? `solid 1px ${divColor}` : '',\n                            display: 'flex',\n                            alignItems: 'center'\n                        }}\n                >\n                    <div className=\"bp3-input-group flags\"\n                        style={{\n                            flex: '1',\n                        }}\n                    >\n                        <span className=\"bp3-icon bp3-icon-filter\"></span>\n                        <input \n                            type=\"text\"\n                            className=\"bp3-input\"\n                            placeholder=\"Flags...\"\n                            onChange={(flags:React.ChangeEvent<HTMLInputElement>) => {setInputFlags(flags.target.value);}}\n                        />\n                        {/* {inputFlags} */}\n                    </div>\n                    <div style={{ float: 'right', display: 'flex' }}>\n                        <Button\n                            className=\"bp3-minimal margin-5\"\n                            icon=\"code\"\n                            text=\"Run cvc5\"\n                            onClick={async () => {\n                                dispatch(setSmt(textRef.current));\n\n                                let args = defaultArgs;\n                                // If is default args\n                                if (inputFlags) {\n                                    args = inputFlags.split('--');\n                                    args = args\n                                        .map((arg) => arg.trim())\n                                        .filter((arg) => {\n                                            return arg.length !== 0;\n                                        })\n                                        .map((arg) => '--' + arg);\n                                    // console.log(args)\n                                } else {\n                                    args = [];\n                                }\n\n                                // Reset the stdout and stderr before executing cvc5\n                                stdoutRef.current = '';\n                                stderrRef.current = '';\n                                changeOutRef.current = false;\n\n                                // Only calls web assembly when there is some text on the code editor\n                                if (textRef.current.trim().length) {\n                                    dispatch(setSpinner('cvc5'));\n                                    const inputTxt = textRef.current.replace(/(;(.)*|;(.)*\\r\\n|;(.)*\\n|;(.)*\\r|\\r\\n|\\n|\\r)/gm, \"\");\n                                    // console.log(inputTxt);\n                                    const clausePattern = /^(\\(check-sat\\))+$/;\n                                    const noClauses = inputTxt.replace(/\\s+/g, '').match(clausePattern);\n                                    // console.log(inputTxt);\n                                    // Run cvc5\n                                    if (!noClauses)\n                                    {\n                                        // console.log(\"args: \" + args)\n                                        Module({\n                                            arguments: args,\n                                            proofTxt: inputTxt,\n                                            out: updateStdout,\n                                            err: updateStderr,\n                                            postCVC5: postCVC5run,\n                                            cleanStdout: cleanStdout,\n                                            binaryFileName: 'cvc5.wasm',\n                                        })\n                                        .then(()=>{\n                                            setCurrentOutput(stdoutRef.current);\n                                            // console.log(\"then: \" + currentOutput);\n                                        });\n                                    } else {\n                                        setCurrentOutput(\"no clauses\"); \n                                        // console.log(\"no clauses\");\n                                    }\n                                }\n                                // There isn't text in the code editor\n                                else {\n                                    addErrorToast('Error: Empty proof in the code editor.');\n                                }\n                            }}\n                            tabIndex={3}\n                        />\n                    </div>\n                </footer>\n                </div>\n                <MonacoEditor\n                    height={'600px'}\n                    language=\"graphql\"\n                    value={currentOutput}\n                    onChange={(value) => value !== undefined && (textRef.current = value)}\n                    onMount={() => forceUpdate()}\n                    options={outputOptions}\n                />\n        </Drawer>\n    );\n};\n\nexport default VisualizerSmtDrawer;\n","import React, { useEffect, useReducer, useState } from 'react';\n\nimport { Intent, Overlay, Position, Spinner, Toaster } from '@blueprintjs/core';\n\nimport { useAppSelector } from '../../store/hooks';\nimport { selectTheme } from '../../store/features/theme/themeSlice';\nimport VisualizerSmtDrawer from '../VisualizerSmtDrawer/VisualizerSmtDrawer';\nimport Cvc5Output from '../Cvc5Output/Cvc5Output';\n\nconst App: React.FC = () => {\n    const [dialogIsOpen, setDialogIsOpen] = useState(true);\n    const [inTutorial, setInTutorial] = useState(false);\n    const [drawerIsOpen, setDrawerOpenState] = useState(true);\n    const [smtDrawerIsOpen, setSmtDrawerIsOpen] = useState(true);\n    const [, disableAllDrawers] = useReducer(() => {\n        if (dialogIsOpen) setDialogIsOpen(false);\n        if (inTutorial) setInTutorial(false);\n        if (drawerIsOpen) setDrawerOpenState(false);\n        if (smtDrawerIsOpen) setSmtDrawerIsOpen(true);\n        return null;\n    }, null);\n    const [smtOptions, setSmtOptions] = useState({ argsType: true, customArgs: '' });\n    const darkTheme = useAppSelector(selectTheme);\n\n\n    // Toaster\n    let toaster: Toaster;\n    const refHandlers = {\n        toaster: (ref: Toaster) => (toaster = ref),\n    };\n\n    const addErrorToast = (err: string) => {\n        toaster.show({ icon: 'warning-sign', intent: Intent.DANGER, message: err });\n    };\n\n    return (\n        <div className={darkTheme ? ' bp3-dark' : ''} style={\n            { \n                width: '100%', \n                height: '100%', \n                display: 'flex', \n                flex:'1', \n                justifyContent: 'center', \n                alignItems: 'center'\n            }\n        }>\n            <Toaster position={Position.TOP} ref={refHandlers.toaster} />\n            <VisualizerSmtDrawer\n                isOpen={true}\n                setDrawerIsOpen={setSmtDrawerIsOpen}\n                addErrorToast={addErrorToast}\n                // smtOptions={smtOptions}\n                // setSmtOptions={setSmtOptions}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../store';\nimport { FileState } from '../../../interfaces/interfaces';\n\nconst initialState: FileState = {\n    name: 'ex.smt2',\n    value: 'digraph proof {\\n\\trankdir=\"BT\";\\n\\tnode [shape=record];\\n\\t0 [label=\"{SCOPE((not a), a)|(not (and (not a) a))}\", class = \" basic \", comment = \"{\\'subProofQty\\':1}\" ];\\n\\t1 [label=\"{CHAIN_RESOLUTION(true, a)|false}\", class = \" propositional \", comment = \"{\\'subProofQty\\':2}\" ];\\n\\t2 [label=\"{ASSUME(a)|a}\", comment = \"{\\'subProofQty\\':0}\"];\\n\\t3 [label=\"{ASSUME((not a))|(not a)}\", comment = \"{\\'subProofQty\\':0}\"];\\n\\t1->0;\\n\\t2->1;\\n\\t3->1;\\n}',\n    filesCount: 0,\n};\n\nexport const fileSlice = createSlice({\n    name: 'file',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        set: (state, action: PayloadAction<{ name: string; value: string }>) => {\n            state.name = action.payload.name;\n            if (state.value !== action.payload.value) {\n                state.value = action.payload.value;\n                state.filesCount++;\n            }\n        },\n    },\n});\n\nexport const { set } = fileSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectFileName = (state: RootState): string => state.file.name;\n\nexport const selectFileExtension = (state: RootState): string => {\n    const ext = state.file.name.split('.').pop();\n    return ext ? ext : '';\n};\n\nexport const selectDot = (state: RootState): string =>\n    state.file.name.split('.').pop() === 'json' ? JSON.parse(state.file.value).dot : state.file.value;\n\nexport const selectFile = (state: RootState): string => state.file.value;\n\nexport const selectFileCount = (state: RootState): number => state.file.filesCount;\n\nexport default fileSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport externalCmdReducer from './features/externalCmd/externalCmd';\nimport fileReducer from './features/file/fileSlice';\nimport proofReducer from './features/proof/proofSlice';\nimport themeReducer from './features/theme/themeSlice';\n\nexport const store = configureStore({\n    reducer: {\n        file: fileReducer,\n        proof: proofReducer,\n        theme: themeReducer,\n        externalCmd: externalCmdReducer,\n    },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\n\nimport './scss/index.scss';\n\nimport reportWebVitals from './ReactUtils/reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var Module = (() => {\r\n    var _scriptDir = window.location.origin + '/cvc5_web/';\r\n\r\n    // This function is responsible for running the web assembly\r\n    return function (Module) {\r\n        var Module = typeof Module != \"undefined\" ? Module : {};\r\n        var readyPromiseResolve, readyPromiseReject;\r\n        Module['ready'] = new Promise(function (resolve, reject) {\r\n            readyPromiseResolve = resolve;\r\n            readyPromiseReject = reject;\r\n        });\r\nvar moduleOverrides = Object.assign({}, Module);\r\nvar arguments_ = [];\r\nvar thisProgram = \"./this.program\";\r\nvar quit_ = (status, toThrow) => {\r\n    throw toThrow\r\n};\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar scriptDirectory = \"\";\r\n\r\nfunction locateFile(path) {\r\n    return scriptDirectory + path\r\n}\r\nvar read_, readAsync, readBinary, setWindowTitle;\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n    if (ENVIRONMENT_IS_WORKER) {\r\n        scriptDirectory = self.location.href\r\n    } \r\n    else if (_scriptDir) {\r\n        scriptDirectory = _scriptDir;\r\n    }\r\n    else if (typeof document != \"undefined\" && document.currentScript) {\r\n        scriptDirectory = document.currentScript.src\r\n    }\r\n    if (scriptDirectory.indexOf(\"blob:\") !== 0) {\r\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1)\r\n    } else {\r\n        scriptDirectory = \"\"\r\n    } {\r\n        read_ = url => {\r\n            var xhr = new XMLHttpRequest;\r\n            xhr.open(\"GET\", url, false);\r\n            xhr.send(null);\r\n            return xhr.responseText\r\n        };\r\n        if (ENVIRONMENT_IS_WORKER) {\r\n            readBinary = url => {\r\n                var xhr = new XMLHttpRequest;\r\n                xhr.open(\"GET\", url, false);\r\n                xhr.responseType = \"arraybuffer\";\r\n                xhr.send(null);\r\n                return new Uint8Array(xhr.response)\r\n            }\r\n        }\r\n        readAsync = (url, onload, onerror) => {\r\n            var xhr = new XMLHttpRequest;\r\n            xhr.open(\"GET\", url, true);\r\n            xhr.responseType = \"arraybuffer\";\r\n            xhr.onload = () => {\r\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\r\n                    onload(xhr.response);\r\n                    return\r\n                }\r\n                onerror()\r\n            };\r\n            xhr.onerror = onerror;\r\n            xhr.send(null)\r\n        }\r\n    }\r\n    setWindowTitle = title => document.title = title\r\n} else {}\r\n\r\nvar out = Module['out'];\r\n// The err is the same thing as out, but related to stderr\r\nvar err = Module['err'];\r\nObject.assign(Module, moduleOverrides);\r\nmoduleOverrides = null;\r\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\r\nvar wasmBinary;\r\nvar noExitRuntime = true;\r\nif (typeof WebAssembly != \"object\") {\r\n    abort(\"no native wasm support detected\")\r\n}\r\nvar wasmMemory;\r\nvar ABORT = false;\r\nvar EXITSTATUS;\r\n\r\nfunction assert(condition, text) {\r\n    if (!condition) {\r\n        abort(text)\r\n    }\r\n}\r\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\r\n\r\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n    var endIdx = idx + maxBytesToRead;\r\n    var endPtr = idx;\r\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr))\r\n    }\r\n    var str = \"\";\r\n    while (idx < endPtr) {\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 128)) {\r\n            str += String.fromCharCode(u0);\r\n            continue\r\n        }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 224) == 192) {\r\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\r\n            continue\r\n        }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 240) == 224) {\r\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2\r\n        } else {\r\n            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63\r\n        }\r\n        if (u0 < 65536) {\r\n            str += String.fromCharCode(u0)\r\n        } else {\r\n            var ch = u0 - 65536;\r\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\r\n        }\r\n    }\r\n    return str\r\n}\r\n\r\nfunction UTF8ToString(ptr, maxBytesToRead) {\r\n    return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\"\r\n}\r\n\r\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n    if (!(maxBytesToWrite > 0)) return 0;\r\n    var startIdx = outIdx;\r\n    var endIdx = outIdx + maxBytesToWrite - 1;\r\n    for (var i = 0; i < str.length; ++i) {\r\n        var u = str.charCodeAt(i);\r\n        if (u >= 55296 && u <= 57343) {\r\n            var u1 = str.charCodeAt(++i);\r\n            u = 65536 + ((u & 1023) << 10) | u1 & 1023\r\n        }\r\n        if (u <= 127) {\r\n            if (outIdx >= endIdx) break;\r\n            heap[outIdx++] = u\r\n        } else if (u <= 2047) {\r\n            if (outIdx + 1 >= endIdx) break;\r\n            heap[outIdx++] = 192 | u >> 6;\r\n            heap[outIdx++] = 128 | u & 63\r\n        } else if (u <= 65535) {\r\n            if (outIdx + 2 >= endIdx) break;\r\n            heap[outIdx++] = 224 | u >> 12;\r\n            heap[outIdx++] = 128 | u >> 6 & 63;\r\n            heap[outIdx++] = 128 | u & 63\r\n        } else {\r\n            if (outIdx + 3 >= endIdx) break;\r\n            heap[outIdx++] = 240 | u >> 18;\r\n            heap[outIdx++] = 128 | u >> 12 & 63;\r\n            heap[outIdx++] = 128 | u >> 6 & 63;\r\n            heap[outIdx++] = 128 | u & 63\r\n        }\r\n    }\r\n    heap[outIdx] = 0;\r\n    return outIdx - startIdx\r\n}\r\n\r\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n    return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite)\r\n}\r\n\r\nfunction lengthBytesUTF8(str) {\r\n    var len = 0;\r\n    for (var i = 0; i < str.length; ++i) {\r\n        var c = str.charCodeAt(i);\r\n        if (c <= 127) {\r\n            len++\r\n        } else if (c <= 2047) {\r\n            len += 2\r\n        } else if (c >= 55296 && c <= 57343) {\r\n            len += 4;\r\n            ++i\r\n        } else {\r\n            len += 3\r\n        }\r\n    }\r\n    return len\r\n}\r\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\r\n\r\nfunction updateGlobalBufferAndViews(buf) {\r\n    buffer = buf;\r\n    Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\r\n    Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\r\n    Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\r\n    Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\r\n    Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\r\n    Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\r\n    Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\r\n    Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf)\r\n}\r\nvar wasmTable;\r\nvar __ATPRERUN__ = [];\r\nvar __ATINIT__ = [];\r\nvar __ATMAIN__ = [];\r\nvar __ATPOSTRUN__ = [];\r\nvar runtimeInitialized = false;\r\n\r\nfunction keepRuntimeAlive() {\r\n    return noExitRuntime\r\n}\r\n\r\nfunction preRun() {\r\n    //location.reload(true);\r\n    callRuntimeCallbacks(__ATPRERUN__)\r\n}\r\n\r\nfunction initRuntime() {\r\n    runtimeInitialized = true;\r\n    if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\r\n    FS.ignorePermissions = false;\r\n    TTY.init();\r\n    PIPEFS.root = FS.mount(PIPEFS, {}, null);\r\n    callRuntimeCallbacks(__ATINIT__)\r\n}\r\n\r\nfunction preMain() {\r\n    callRuntimeCallbacks(__ATMAIN__)\r\n}\r\n\r\nfunction postRun() {\r\n    callRuntimeCallbacks(__ATPOSTRUN__)\r\n    // shouldRunNow = true;\r\n    // run();\r\n    Module['postCVC5'](false);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n    __ATINIT__.unshift(cb)\r\n}\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null;\r\n\r\nfunction getUniqueRunDependency(id) {\r\n    return id\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n    runDependencies++\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n    runDependencies--;\r\n    if (runDependencies == 0) {\r\n        if (runDependencyWatcher !== null) {\r\n            clearInterval(runDependencyWatcher);\r\n            runDependencyWatcher = null\r\n        }\r\n        if (dependenciesFulfilled) {\r\n            var callback = dependenciesFulfilled;\r\n            dependenciesFulfilled = null;\r\n            callback()\r\n        }\r\n    }\r\n}\r\n\r\nfunction abort(what) {\r\n    what = \"Aborted(\" + what + \")\";\r\n    err(what);\r\n    ABORT = true;\r\n    EXITSTATUS = 1;\r\n    what += \". Build with -sASSERTIONS for more info.\";\r\n    var e = new WebAssembly.RuntimeError(what);\r\n    readyPromiseReject(e)\r\n    throw e\r\n}\r\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\r\n\r\nfunction isDataURI(filename) {\r\n    return filename.startsWith(dataURIPrefix)\r\n}\r\nvar wasmBinaryFile;\r\nwasmBinaryFile =  wasmBinaryFile = Module['binaryFileName']; //\"cvc5.wasm\";\r\nif (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile)\r\n}\r\n\r\nfunction getBinary(file) {\r\n    try {\r\n        if (file == wasmBinaryFile && wasmBinary) {\r\n            return new Uint8Array(wasmBinary)\r\n        }\r\n        if (readBinary) {\r\n            return readBinary(file)\r\n        }\r\n        throw \"both async and sync fetching of the wasm failed\"\r\n    } catch (err) {\r\n        abort(err)\r\n    }\r\n}\r\n\r\nfunction getBinaryPromise() {\r\n    if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n        if (typeof fetch == \"function\") {\r\n            return fetch(wasmBinaryFile, {\r\n                credentials: \"same-origin\"\r\n            }).then(function (response) {\r\n                if (!response[\"ok\"]) {\r\n                    throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\r\n                }\r\n                return response[\"arrayBuffer\"]()\r\n            }).catch(function () {\r\n                return getBinary(wasmBinaryFile)\r\n            })\r\n        }\r\n    }\r\n    return Promise.resolve().then(function () {\r\n        return getBinary(wasmBinaryFile)\r\n    })\r\n}\r\n\r\nfunction createWasm() {\r\n    var info = {\r\n        \"a\": asmLibraryArg\r\n    };\r\n\r\n    function receiveInstance(instance, module) {\r\n        var exports = instance.exports;\r\n        Module[\"asm\"] = exports;\r\n        wasmMemory = Module[\"asm\"][\"y\"];\r\n        updateGlobalBufferAndViews(wasmMemory.buffer);\r\n        wasmTable = Module[\"asm\"][\"A\"];\r\n        addOnInit(Module[\"asm\"][\"z\"]);\r\n        removeRunDependency(\"wasm-instantiate\")\r\n    }\r\n    addRunDependency(\"wasm-instantiate\");\r\n\r\n    function receiveInstantiationResult(result) {\r\n        receiveInstance(result[\"instance\"])\r\n    }\r\n\r\n    function instantiateArrayBuffer(receiver) {\r\n        return getBinaryPromise().then(function (binary) {\r\n            return WebAssembly.instantiate(binary, info)\r\n        }).then(function (instance) {\r\n            return instance\r\n        }).then(receiver, function (reason) {\r\n            err(\"failed to asynchronously prepare wasm: \" + reason);\r\n            abort(reason)\r\n        })\r\n    }\r\n\r\n    function instantiateAsync() {\r\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch == \"function\") {\r\n            return fetch(wasmBinaryFile, {\r\n                credentials: \"same-origin\"\r\n            }).then(function (response) {\r\n                var result = WebAssembly.instantiateStreaming(response, info);\r\n                return result.then(receiveInstantiationResult, function (reason) {\r\n                    err(\"wasm streaming compile failed: \" + reason);\r\n                    err(\"falling back to ArrayBuffer instantiation\");\r\n                    return instantiateArrayBuffer(receiveInstantiationResult)\r\n                })\r\n            })\r\n        } else {\r\n            return instantiateArrayBuffer(receiveInstantiationResult)\r\n        }\r\n    }\r\n    if (Module[\"instantiateWasm\"]) {\r\n        try {\r\n            var exports = Module[\"instantiateWasm\"](info, receiveInstance);\r\n            return exports\r\n        } catch (e) {\r\n            err(\"Module.instantiateWasm callback failed with error: \" + e);\r\n            return false\r\n        }\r\n    }\r\n    // instantiateAsync();\r\n    instantiateAsync().catch(readyPromiseReject);\r\n    return {}\r\n}\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\nfunction ExitStatus(status) {\r\n    this.name = \"ExitStatus\";\r\n    this.message = \"Program terminated with exit(\" + status + \")\";\r\n    this.status = status\r\n}\r\n\r\nfunction callRuntimeCallbacks(callbacks) {\r\n    while (callbacks.length > 0) {\r\n        callbacks.shift()(Module)\r\n    }\r\n}\r\n\r\nfunction handleException(e) {\r\n    if (e instanceof ExitStatus || e == \"unwind\") {\r\n        return EXITSTATUS\r\n    }\r\n    Module['postCVC5'](true);\r\n    quit_(1, e)\r\n}\r\n\r\nfunction writeArrayToMemory(array, buffer) {\r\n    HEAP8.set(array, buffer)\r\n}\r\nvar wasmTableMirror = [];\r\n\r\nfunction getWasmTableEntry(funcPtr) {\r\n    var func = wasmTableMirror[funcPtr];\r\n    if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr)\r\n    }\r\n    return func\r\n}\r\n\r\nfunction ___call_sighandler(fp, sig) {\r\n    getWasmTableEntry(fp)(sig)\r\n}\r\n\r\nfunction ___cxa_allocate_exception(size) {\r\n    return _malloc(size + 24) + 24\r\n}\r\n\r\nfunction ExceptionInfo(excPtr) {\r\n    this.excPtr = excPtr;\r\n    this.ptr = excPtr - 24;\r\n    this.set_type = function (type) {\r\n        HEAPU32[this.ptr + 4 >> 2] = type\r\n    };\r\n    this.get_type = function () {\r\n        return HEAPU32[this.ptr + 4 >> 2]\r\n    };\r\n    this.set_destructor = function (destructor) {\r\n        HEAPU32[this.ptr + 8 >> 2] = destructor\r\n    };\r\n    this.get_destructor = function () {\r\n        return HEAPU32[this.ptr + 8 >> 2]\r\n    };\r\n    this.set_refcount = function (refcount) {\r\n        HEAP32[this.ptr >> 2] = refcount\r\n    };\r\n    this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[this.ptr + 12 >> 0] = caught\r\n    };\r\n    this.get_caught = function () {\r\n        return HEAP8[this.ptr + 12 >> 0] != 0\r\n    };\r\n    this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[this.ptr + 13 >> 0] = rethrown\r\n    };\r\n    this.get_rethrown = function () {\r\n        return HEAP8[this.ptr + 13 >> 0] != 0\r\n    };\r\n    this.init = function (type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n        this.set_refcount(0);\r\n        this.set_caught(false);\r\n        this.set_rethrown(false)\r\n    };\r\n    this.add_ref = function () {\r\n        var value = HEAP32[this.ptr >> 2];\r\n        HEAP32[this.ptr >> 2] = value + 1\r\n    };\r\n    this.release_ref = function () {\r\n        var prev = HEAP32[this.ptr >> 2];\r\n        HEAP32[this.ptr >> 2] = prev - 1;\r\n        return prev === 1\r\n    };\r\n    this.set_adjusted_ptr = function (adjustedPtr) {\r\n        HEAPU32[this.ptr + 16 >> 2] = adjustedPtr\r\n    };\r\n    this.get_adjusted_ptr = function () {\r\n        return HEAPU32[this.ptr + 16 >> 2]\r\n    };\r\n    this.get_exception_ptr = function () {\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n            return HEAPU32[this.excPtr >> 2]\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr\r\n    }\r\n}\r\nvar exceptionLast = 0;\r\nvar uncaughtExceptionCount = 0;\r\n\r\nfunction ___cxa_throw(ptr, type, destructor) {\r\n    var info = new ExceptionInfo(ptr);\r\n    info.init(type, destructor);\r\n    exceptionLast = ptr;\r\n    uncaughtExceptionCount++;\r\n    throw ptr\r\n}\r\nvar PATH = {\r\n    isAbs: path => path.charAt(0) === \"/\",\r\n    splitPath: filename => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1)\r\n    },\r\n    normalizeArray: (parts, allowAboveRoot) => {\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n            var last = parts[i];\r\n            if (last === \".\") {\r\n                parts.splice(i, 1)\r\n            } else if (last === \"..\") {\r\n                parts.splice(i, 1);\r\n                up++\r\n            } else if (up) {\r\n                parts.splice(i, 1);\r\n                up--\r\n            }\r\n        }\r\n        if (allowAboveRoot) {\r\n            for (; up; up--) {\r\n                parts.unshift(\"..\")\r\n            }\r\n        }\r\n        return parts\r\n    },\r\n    normalize: path => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === \"/\";\r\n        path = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), !isAbsolute).join(\"/\");\r\n        if (!path && !isAbsolute) {\r\n            path = \".\"\r\n        }\r\n        if (path && trailingSlash) {\r\n            path += \"/\"\r\n        }\r\n        return (isAbsolute ? \"/\" : \"\") + path\r\n    },\r\n    dirname: path => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n            return \".\"\r\n        }\r\n        if (dir) {\r\n            dir = dir.substr(0, dir.length - 1)\r\n        }\r\n        return root + dir\r\n    },\r\n    basename: path => {\r\n        if (path === \"/\") return \"/\";\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf(\"/\");\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash + 1)\r\n    },\r\n    join: function () {\r\n        var paths = Array.prototype.slice.call(arguments, 0);\r\n        return PATH.normalize(paths.join(\"/\"))\r\n    },\r\n    join2: (l, r) => {\r\n        return PATH.normalize(l + \"/\" + r)\r\n    }\r\n};\r\n\r\nfunction getRandomDevice() {\r\n    if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") {\r\n        var randomBuffer = new Uint8Array(1);\r\n        return () => {\r\n            crypto.getRandomValues(randomBuffer);\r\n            return randomBuffer[0]\r\n        }\r\n    } else return () => abort(\"randomDevice\")\r\n}\r\nvar PATH_FS = {\r\n    resolve: function () {\r\n        var resolvedPath = \"\",\r\n            resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n            var path = i >= 0 ? arguments[i] : FS.cwd();\r\n            if (typeof path != \"string\") {\r\n                throw new TypeError(\"Arguments to path.resolve must be strings\")\r\n            } else if (!path) {\r\n                return \"\"\r\n            }\r\n            resolvedPath = path + \"/\" + resolvedPath;\r\n            resolvedAbsolute = PATH.isAbs(path)\r\n        }\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(p => !!p), !resolvedAbsolute).join(\"/\");\r\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\"\r\n    },\r\n    relative: (from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n\r\n        function trim(arr) {\r\n            var start = 0;\r\n            for (; start < arr.length; start++) {\r\n                if (arr[start] !== \"\") break\r\n            }\r\n            var end = arr.length - 1;\r\n            for (; end >= 0; end--) {\r\n                if (arr[end] !== \"\") break\r\n            }\r\n            if (start > end) return [];\r\n            return arr.slice(start, end - start + 1)\r\n        }\r\n        var fromParts = trim(from.split(\"/\"));\r\n        var toParts = trim(to.split(\"/\"));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (fromParts[i] !== toParts[i]) {\r\n                samePartsLength = i;\r\n                break\r\n            }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n            outputParts.push(\"..\")\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join(\"/\")\r\n    }\r\n};\r\n\r\nfunction intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array\r\n}\r\nvar TTY = {\r\n    ttys: [],\r\n    init: function () {return;},\r\n    shutdown: function () {return;},\r\n    register: function (dev, ops) {\r\n        TTY.ttys[dev] = {\r\n            input: [],\r\n            output: [],\r\n            ops: ops\r\n        };\r\n        FS.registerDevice(dev, TTY.stream_ops)\r\n    },\r\n    stream_ops: {\r\n        open: function (stream) {\r\n            var tty = TTY.ttys[stream.node.rdev];\r\n            if (!tty) {\r\n                throw new FS.ErrnoError(43)\r\n            }\r\n            stream.tty = tty;\r\n            stream.seekable = false\r\n        },\r\n        close: function (stream) {\r\n            stream.tty.ops.flush(stream.tty)\r\n        },\r\n        flush: function (stream) {\r\n            stream.tty.ops.flush(stream.tty)\r\n        },\r\n        read: function (stream, buffer, offset, length, pos) {\r\n            if (!stream.tty || !stream.tty.ops.get_char) {\r\n                throw new FS.ErrnoError(60)\r\n            }\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n                var result;\r\n                try {\r\n                    result = stream.tty.ops.get_char(stream.tty)\r\n                } catch (e) {\r\n                    throw new FS.ErrnoError(29)\r\n                }\r\n                if (result === undefined && bytesRead === 0) {\r\n                    throw new FS.ErrnoError(6)\r\n                }\r\n                if (result === null || result === undefined) break;\r\n                bytesRead++;\r\n                buffer[offset + i] = result\r\n            }\r\n            if (bytesRead) {\r\n                stream.node.timestamp = Date.now()\r\n            }\r\n            return bytesRead\r\n        },\r\n        write: function (stream, buffer, offset, length, pos) {\r\n            if (!stream.tty || !stream.tty.ops.put_char) {\r\n                throw new FS.ErrnoError(60)\r\n            }\r\n            try {\r\n                for (var i = 0; i < length; i++) {\r\n                    stream.tty.ops.put_char(stream.tty, buffer[offset + i])\r\n                }\r\n            } catch (e) {\r\n                throw new FS.ErrnoError(29)\r\n            }\r\n            if (length) {\r\n                stream.node.timestamp = Date.now()\r\n            }\r\n            return i\r\n        }\r\n    },\r\n    default_tty_ops: {\r\n        get_char: function (tty) {\r\n            if (!tty.input.length) {\r\n                var result = null;\r\n                if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\r\n                    result = Module['proofTxt'];\r\n                    Module['cleanStdout']();\r\n                    if (result !== null) {\r\n                        result += \"\\n\"\r\n                    }\r\n                } else if (typeof readline == \"function\") {\r\n                    result = readline();\r\n                    if (result !== null) {\r\n                        result += \"\\n\"\r\n                    }\r\n                }\r\n                if (!result) {\r\n                    return null\r\n                }\r\n                tty.input = intArrayFromString(result, true)\r\n            }\r\n            return tty.input.shift()\r\n        },\r\n        put_char: function (tty, val) {\r\n            if (val === null || val === 10) {\r\n                out(UTF8ArrayToString(tty.output, 0));\r\n                tty.output = []\r\n            } else {\r\n                if (val != 0) tty.output.push(val)\r\n            }\r\n        },\r\n        flush: function (tty) {\r\n            if (tty.output && tty.output.length > 0) {\r\n                out(UTF8ArrayToString(tty.output, 0));\r\n                tty.output = []\r\n            }\r\n        }\r\n    },\r\n    default_tty1_ops: {\r\n        put_char: function (tty, val) {\r\n            if (val === null || val === 10) {\r\n                err(UTF8ArrayToString(tty.output, 0));\r\n                tty.output = []\r\n            } else {\r\n                if (val != 0) tty.output.push(val)\r\n            }\r\n        },\r\n        flush: function (tty) {\r\n            if (tty.output && tty.output.length > 0) {\r\n                err(UTF8ArrayToString(tty.output, 0));\r\n                tty.output = []\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction mmapAlloc(size) {\r\n    abort()\r\n}\r\nvar MEMFS = {\r\n    ops_table: null,\r\n    mount: function (mount) {\r\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0)\r\n    },\r\n    createNode: function (parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n            MEMFS.ops_table = {\r\n                dir: {\r\n                    node: {\r\n                        getattr: MEMFS.node_ops.getattr,\r\n                        setattr: MEMFS.node_ops.setattr,\r\n                        lookup: MEMFS.node_ops.lookup,\r\n                        mknod: MEMFS.node_ops.mknod,\r\n                        rename: MEMFS.node_ops.rename,\r\n                        unlink: MEMFS.node_ops.unlink,\r\n                        rmdir: MEMFS.node_ops.rmdir,\r\n                        readdir: MEMFS.node_ops.readdir,\r\n                        symlink: MEMFS.node_ops.symlink\r\n                    },\r\n                    stream: {\r\n                        llseek: MEMFS.stream_ops.llseek\r\n                    }\r\n                },\r\n                file: {\r\n                    node: {\r\n                        getattr: MEMFS.node_ops.getattr,\r\n                        setattr: MEMFS.node_ops.setattr\r\n                    },\r\n                    stream: {\r\n                        llseek: MEMFS.stream_ops.llseek,\r\n                        read: MEMFS.stream_ops.read,\r\n                        write: MEMFS.stream_ops.write,\r\n                        allocate: MEMFS.stream_ops.allocate,\r\n                        mmap: MEMFS.stream_ops.mmap,\r\n                        msync: MEMFS.stream_ops.msync\r\n                    }\r\n                },\r\n                link: {\r\n                    node: {\r\n                        getattr: MEMFS.node_ops.getattr,\r\n                        setattr: MEMFS.node_ops.setattr,\r\n                        readlink: MEMFS.node_ops.readlink\r\n                    },\r\n                    stream: {}\r\n                },\r\n                chrdev: {\r\n                    node: {\r\n                        getattr: MEMFS.node_ops.getattr,\r\n                        setattr: MEMFS.node_ops.setattr\r\n                    },\r\n                    stream: FS.chrdev_stream_ops\r\n                }\r\n            }\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.dir.node;\r\n            node.stream_ops = MEMFS.ops_table.dir.stream;\r\n            node.contents = {}\r\n        } else if (FS.isFile(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.file.node;\r\n            node.stream_ops = MEMFS.ops_table.file.stream;\r\n            node.usedBytes = 0;\r\n            node.contents = null\r\n        } else if (FS.isLink(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.link.node;\r\n            node.stream_ops = MEMFS.ops_table.link.stream\r\n        } else if (FS.isChrdev(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.chrdev.node;\r\n            node.stream_ops = MEMFS.ops_table.chrdev.stream\r\n        }\r\n        node.timestamp = Date.now();\r\n        if (parent) {\r\n            parent.contents[name] = node;\r\n            parent.timestamp = node.timestamp\r\n        }\r\n        return node\r\n    },\r\n    getFileDataAsTypedArray: function (node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\r\n        return new Uint8Array(node.contents)\r\n    },\r\n    expandFileStorage: function (node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return;\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity);\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0)\r\n    },\r\n    resizeFileStorage: function (node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n            node.contents = null;\r\n            node.usedBytes = 0\r\n        } else {\r\n            var oldContents = node.contents;\r\n            node.contents = new Uint8Array(newSize);\r\n            if (oldContents) {\r\n                node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)))\r\n            }\r\n            node.usedBytes = newSize\r\n        }\r\n    },\r\n    node_ops: {\r\n        getattr: function (node) {\r\n            var attr = {};\r\n            attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n            attr.ino = node.id;\r\n            attr.mode = node.mode;\r\n            attr.nlink = 1;\r\n            attr.uid = 0;\r\n            attr.gid = 0;\r\n            attr.rdev = node.rdev;\r\n            if (FS.isDir(node.mode)) {\r\n                attr.size = 4096\r\n            } else if (FS.isFile(node.mode)) {\r\n                attr.size = node.usedBytes\r\n            } else if (FS.isLink(node.mode)) {\r\n                attr.size = node.link.length\r\n            } else {\r\n                attr.size = 0\r\n            }\r\n            attr.atime = new Date(node.timestamp);\r\n            attr.mtime = new Date(node.timestamp);\r\n            attr.ctime = new Date(node.timestamp);\r\n            attr.blksize = 4096;\r\n            attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n            return attr\r\n        },\r\n        setattr: function (node, attr) {\r\n            if (attr.mode !== undefined) {\r\n                node.mode = attr.mode\r\n            }\r\n            if (attr.timestamp !== undefined) {\r\n                node.timestamp = attr.timestamp\r\n            }\r\n            if (attr.size !== undefined) {\r\n                MEMFS.resizeFileStorage(node, attr.size)\r\n            }\r\n        },\r\n        lookup: function (parent, name) {\r\n            throw FS.genericErrors[44]\r\n        },\r\n        mknod: function (parent, name, mode, dev) {\r\n            return MEMFS.createNode(parent, name, mode, dev)\r\n        },\r\n        rename: function (old_node, new_dir, new_name) {\r\n            if (FS.isDir(old_node.mode)) {\r\n                var new_node;\r\n                try {\r\n                    new_node = FS.lookupNode(new_dir, new_name)\r\n                } catch (e) {}\r\n                if (new_node) {\r\n                    for (var i in new_node.contents) {\r\n                        throw new FS.ErrnoError(55)\r\n                    }\r\n                }\r\n            }\r\n            delete old_node.parent.contents[old_node.name];\r\n            old_node.parent.timestamp = Date.now();\r\n            old_node.name = new_name;\r\n            new_dir.contents[new_name] = old_node;\r\n            new_dir.timestamp = old_node.parent.timestamp;\r\n            old_node.parent = new_dir\r\n        },\r\n        unlink: function (parent, name) {\r\n            delete parent.contents[name];\r\n            parent.timestamp = Date.now()\r\n        },\r\n        rmdir: function (parent, name) {\r\n            var node = FS.lookupNode(parent, name);\r\n            for (var i in node.contents) {\r\n                throw new FS.ErrnoError(55)\r\n            }\r\n            delete parent.contents[name];\r\n            parent.timestamp = Date.now()\r\n        },\r\n        readdir: function (node) {\r\n            var entries = [\".\", \"..\"];\r\n            for (var key in node.contents) {\r\n                if (!node.contents.hasOwnProperty(key)) {\r\n                    continue\r\n                }\r\n                entries.push(key)\r\n            }\r\n            return entries\r\n        },\r\n        symlink: function (parent, newname, oldpath) {\r\n            var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\r\n            node.link = oldpath;\r\n            return node\r\n        },\r\n        readlink: function (node) {\r\n            if (!FS.isLink(node.mode)) {\r\n                throw new FS.ErrnoError(28)\r\n            }\r\n            return node.link\r\n        }\r\n    },\r\n    stream_ops: {\r\n        read: function (stream, buffer, offset, length, position) {\r\n            var contents = stream.node.contents;\r\n            if (position >= stream.node.usedBytes) return 0;\r\n            var size = Math.min(stream.node.usedBytes - position, length);\r\n            if (size > 8 && contents.subarray) {\r\n                buffer.set(contents.subarray(position, position + size), offset)\r\n            } else {\r\n                for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i]\r\n            }\r\n            return size\r\n        },\r\n        write: function (stream, buffer, offset, length, position, canOwn) {\r\n            if (!length) return 0;\r\n            var node = stream.node;\r\n            node.timestamp = Date.now();\r\n            if (buffer.subarray && (!node.contents || node.contents.subarray)) {\r\n                if (canOwn) {\r\n                    node.contents = buffer.subarray(offset, offset + length);\r\n                    node.usedBytes = length;\r\n                    return length\r\n                } else if (node.usedBytes === 0 && position === 0) {\r\n                    node.contents = buffer.slice(offset, offset + length);\r\n                    node.usedBytes = length;\r\n                    return length\r\n                } else if (position + length <= node.usedBytes) {\r\n                    node.contents.set(buffer.subarray(offset, offset + length), position);\r\n                    return length\r\n                }\r\n            }\r\n            MEMFS.expandFileStorage(node, position + length);\r\n            if (node.contents.subarray && buffer.subarray) {\r\n                node.contents.set(buffer.subarray(offset, offset + length), position)\r\n            } else {\r\n                for (var i = 0; i < length; i++) {\r\n                    node.contents[position + i] = buffer[offset + i]\r\n                }\r\n            }\r\n            node.usedBytes = Math.max(node.usedBytes, position + length);\r\n            return length\r\n        },\r\n        llseek: function (stream, offset, whence) {\r\n            var position = offset;\r\n            if (whence === 1) {\r\n                position += stream.position\r\n            } else if (whence === 2) {\r\n                if (FS.isFile(stream.node.mode)) {\r\n                    position += stream.node.usedBytes\r\n                }\r\n            }\r\n            if (position < 0) {\r\n                throw new FS.ErrnoError(28)\r\n            }\r\n            return position\r\n        },\r\n        allocate: function (stream, offset, length) {\r\n            MEMFS.expandFileStorage(stream.node, offset + length);\r\n            stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length)\r\n        },\r\n        mmap: function (stream, length, position, prot, flags) {\r\n            if (!FS.isFile(stream.node.mode)) {\r\n                throw new FS.ErrnoError(43)\r\n            }\r\n            var ptr;\r\n            var allocated;\r\n            var contents = stream.node.contents;\r\n            if (!(flags & 2) && contents.buffer === buffer) {\r\n                allocated = false;\r\n                ptr = contents.byteOffset\r\n            } else {\r\n                if (position > 0 || position + length < contents.length) {\r\n                    if (contents.subarray) {\r\n                        contents = contents.subarray(position, position + length)\r\n                    } else {\r\n                        contents = Array.prototype.slice.call(contents, position, position + length)\r\n                    }\r\n                }\r\n                allocated = true;\r\n                ptr = mmapAlloc(length);\r\n                if (!ptr) {\r\n                    throw new FS.ErrnoError(48)\r\n                }\r\n                HEAP8.set(contents, ptr)\r\n            }\r\n            return {\r\n                ptr: ptr,\r\n                allocated: allocated\r\n            }\r\n        },\r\n        msync: function (stream, buffer, offset, length, mmapFlags) {\r\n            if (!FS.isFile(stream.node.mode)) {\r\n                throw new FS.ErrnoError(43)\r\n            }\r\n            if (mmapFlags & 2) {\r\n                return 0\r\n            }\r\n            var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n            return 0\r\n        }\r\n    }\r\n};\r\n\r\nfunction asyncLoad(url, onload, onerror, noRunDep) {\r\n    var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\r\n    readAsync(url, arrayBuffer => {\r\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep)\r\n    }, event => {\r\n        if (onerror) {\r\n            onerror()\r\n        } else {\r\n            throw 'Loading data file \"' + url + '\" failed.'\r\n        }\r\n    });\r\n    if (dep) addRunDependency(dep)\r\n}\r\nvar FS = {\r\n    root: null,\r\n    mounts: [],\r\n    devices: {},\r\n    streams: [],\r\n    nextInode: 1,\r\n    nameTable: null,\r\n    currentPath: \"/\",\r\n    initialized: false,\r\n    ignorePermissions: true,\r\n    ErrnoError: null,\r\n    genericErrors: {},\r\n    filesystems: null,\r\n    syncFSRequests: 0,\r\n    lookupPath: (path, opts = {}) => {\r\n        path = PATH_FS.resolve(FS.cwd(), path);\r\n        if (!path) return {\r\n            path: \"\",\r\n            node: null\r\n        };\r\n        var defaults = {\r\n            follow_mount: true,\r\n            recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts);\r\n        if (opts.recurse_count > 8) {\r\n            throw new FS.ErrnoError(32)\r\n        }\r\n        var parts = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), false);\r\n        var current = FS.root;\r\n        var current_path = \"/\";\r\n        for (var i = 0; i < parts.length; i++) {\r\n            var islast = i === parts.length - 1;\r\n            if (islast && opts.parent) {\r\n                break\r\n            }\r\n            current = FS.lookupNode(current, parts[i]);\r\n            current_path = PATH.join2(current_path, parts[i]);\r\n            if (FS.isMountpoint(current)) {\r\n                if (!islast || islast && opts.follow_mount) {\r\n                    current = current.mounted.root\r\n                }\r\n            }\r\n            if (!islast || opts.follow) {\r\n                var count = 0;\r\n                while (FS.isLink(current.mode)) {\r\n                    var link = FS.readlink(current_path);\r\n                    current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n                    var lookup = FS.lookupPath(current_path, {\r\n                        recurse_count: opts.recurse_count + 1\r\n                    });\r\n                    current = lookup.node;\r\n                    if (count++ > 40) {\r\n                        throw new FS.ErrnoError(32)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            path: current_path,\r\n            node: current\r\n        }\r\n    },\r\n    getPath: node => {\r\n        var path;\r\n        while (true) {\r\n            if (FS.isRoot(node)) {\r\n                var mount = node.mount.mountpoint;\r\n                if (!path) return mount;\r\n                return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path\r\n            }\r\n            path = path ? node.name + \"/\" + path : node.name;\r\n            node = node.parent\r\n        }\r\n    },\r\n    hashName: (parentid, name) => {\r\n        var hash = 0;\r\n        for (var i = 0; i < name.length; i++) {\r\n            hash = (hash << 5) - hash + name.charCodeAt(i) | 0\r\n        }\r\n        return (parentid + hash >>> 0) % FS.nameTable.length\r\n    },\r\n    hashAddNode: node => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node\r\n    },\r\n    hashRemoveNode: node => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n            FS.nameTable[hash] = node.name_next\r\n        } else {\r\n            var current = FS.nameTable[hash];\r\n            while (current) {\r\n                if (current.name_next === node) {\r\n                    current.name_next = node.name_next;\r\n                    break\r\n                }\r\n                current = current.name_next\r\n            }\r\n        }\r\n    },\r\n    lookupNode: (parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode, parent)\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n            var nodeName = node.name;\r\n            if (node.parent.id === parent.id && nodeName === name) {\r\n                return node\r\n            }\r\n        }\r\n        return FS.lookup(parent, name)\r\n    },\r\n    createNode: (parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n        FS.hashAddNode(node);\r\n        return node\r\n    },\r\n    destroyNode: node => {\r\n        FS.hashRemoveNode(node)\r\n    },\r\n    isRoot: node => {\r\n        return node === node.parent\r\n    },\r\n    isMountpoint: node => {\r\n        return !!node.mounted\r\n    },\r\n    isFile: mode => {\r\n        return (mode & 61440) === 32768\r\n    },\r\n    isDir: mode => {\r\n        return (mode & 61440) === 16384\r\n    },\r\n    isLink: mode => {\r\n        return (mode & 61440) === 40960\r\n    },\r\n    isChrdev: mode => {\r\n        return (mode & 61440) === 8192\r\n    },\r\n    isBlkdev: mode => {\r\n        return (mode & 61440) === 24576\r\n    },\r\n    isFIFO: mode => {\r\n        return (mode & 61440) === 4096\r\n    },\r\n    isSocket: mode => {\r\n        return (mode & 49152) === 49152\r\n    },\r\n    flagModes: {\r\n        \"r\": 0,\r\n        \"r+\": 2,\r\n        \"w\": 577,\r\n        \"w+\": 578,\r\n        \"a\": 1089,\r\n        \"a+\": 1090\r\n    },\r\n    modeStringToFlags: str => {\r\n        var flags = FS.flagModes[str];\r\n        if (typeof flags == \"undefined\") {\r\n            throw new Error(\"Unknown file open mode: \" + str)\r\n        }\r\n        return flags\r\n    },\r\n    flagsToPermissionString: flag => {\r\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\r\n        if (flag & 512) {\r\n            perms += \"w\"\r\n        }\r\n        return perms\r\n    },\r\n    nodePermissions: (node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n            return 0\r\n        }\r\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\r\n            return 2\r\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\r\n            return 2\r\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\r\n            return 2\r\n        }\r\n        return 0\r\n    },\r\n    mayLookup: dir => {\r\n        var errCode = FS.nodePermissions(dir, \"x\");\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0\r\n    },\r\n    mayCreate: (dir, name) => {\r\n        try {\r\n            var node = FS.lookupNode(dir, name);\r\n            return 20\r\n        } catch (e) {}\r\n        return FS.nodePermissions(dir, \"wx\")\r\n    },\r\n    mayDelete: (dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n            node = FS.lookupNode(dir, name)\r\n        } catch (e) {\r\n            return e.errno\r\n        }\r\n        var errCode = FS.nodePermissions(dir, \"wx\");\r\n        if (errCode) {\r\n            return errCode\r\n        }\r\n        if (isdir) {\r\n            if (!FS.isDir(node.mode)) {\r\n                return 54\r\n            }\r\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n                return 10\r\n            }\r\n        } else {\r\n            if (FS.isDir(node.mode)) {\r\n                return 31\r\n            }\r\n        }\r\n        return 0\r\n    },\r\n    mayOpen: (node, flags) => {\r\n        if (!node) {\r\n            return 44\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n            return 32\r\n        } else if (FS.isDir(node.mode)) {\r\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\r\n                return 31\r\n            }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags))\r\n    },\r\n    MAX_OPEN_FDS: 4096,\r\n    nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n        for (var fd = fd_start; fd <= fd_end; fd++) {\r\n            if (!FS.streams[fd]) {\r\n                return fd\r\n            }\r\n        }\r\n        throw new FS.ErrnoError(33)\r\n    },\r\n    getStream: fd => FS.streams[fd],\r\n    createStream: (stream, fd_start, fd_end) => {\r\n        if (!FS.FSStream) {\r\n            FS.FSStream = function () {\r\n                this.shared = {}\r\n            };\r\n            FS.FSStream.prototype = {};\r\n            Object.defineProperties(FS.FSStream.prototype, {\r\n                object: {\r\n                    get: function () {\r\n                        return this.node\r\n                    },\r\n                    set: function (val) {\r\n                        this.node = val\r\n                    }\r\n                },\r\n                isRead: {\r\n                    get: function () {\r\n                        return (this.flags & 2097155) !== 1\r\n                    }\r\n                },\r\n                isWrite: {\r\n                    get: function () {\r\n                        return (this.flags & 2097155) !== 0\r\n                    }\r\n                },\r\n                isAppend: {\r\n                    get: function () {\r\n                        return this.flags & 1024\r\n                    }\r\n                },\r\n                flags: {\r\n                    get: function () {\r\n                        return this.shared.flags\r\n                    },\r\n                    set: function (val) {\r\n                        this.shared.flags = val\r\n                    }\r\n                },\r\n                position: {\r\n                    get: function () {\r\n                        return this.shared.position\r\n                    },\r\n                    set: function (val) {\r\n                        this.shared.position = val\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        stream = Object.assign(new FS.FSStream, stream);\r\n        var fd = FS.nextfd(fd_start, fd_end);\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream\r\n    },\r\n    closeStream: fd => {\r\n        FS.streams[fd] = null\r\n    },\r\n    chrdev_stream_ops: {\r\n        open: stream => {\r\n            var device = FS.getDevice(stream.node.rdev);\r\n            stream.stream_ops = device.stream_ops;\r\n            if (stream.stream_ops.open) {\r\n                stream.stream_ops.open(stream)\r\n            }\r\n        },\r\n        llseek: () => {\r\n            throw new FS.ErrnoError(70)\r\n        }\r\n    },\r\n    major: dev => dev >> 8,\r\n    minor: dev => dev & 255,\r\n    makedev: (ma, mi) => ma << 8 | mi,\r\n    registerDevice: (dev, ops) => {\r\n        FS.devices[dev] = {\r\n            stream_ops: ops\r\n        }\r\n    },\r\n    getDevice: dev => FS.devices[dev],\r\n    getMounts: mount => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n        while (check.length) {\r\n            var m = check.pop();\r\n            mounts.push(m);\r\n            check.push.apply(check, m.mounts)\r\n        }\r\n        return mounts\r\n    },\r\n    syncfs: (populate, callback) => {\r\n        if (typeof populate == \"function\") {\r\n            callback = populate;\r\n            populate = false\r\n        }\r\n        FS.syncFSRequests++;\r\n        if (FS.syncFSRequests > 1) {\r\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\")\r\n        }\r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n\r\n        function doCallback(errCode) {\r\n            FS.syncFSRequests--;\r\n            return callback(errCode)\r\n        }\r\n\r\n        function done(errCode) {\r\n            if (errCode) {\r\n                if (!done.errored) {\r\n                    done.errored = true;\r\n                    return doCallback(errCode)\r\n                }\r\n                return\r\n            }\r\n            if (++completed >= mounts.length) {\r\n                doCallback(null)\r\n            }\r\n        }\r\n        mounts.forEach(mount => {\r\n            if (!mount.type.syncfs) {\r\n                return done(null)\r\n            }\r\n            mount.type.syncfs(mount, populate, done)\r\n        })\r\n    },\r\n    mount: (type, opts, mountpoint) => {\r\n        var root = mountpoint === \"/\";\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n        if (root && FS.root) {\r\n            throw new FS.ErrnoError(10)\r\n        } else if (!root && !pseudo) {\r\n            var lookup = FS.lookupPath(mountpoint, {\r\n                follow_mount: false\r\n            });\r\n            mountpoint = lookup.path;\r\n            node = lookup.node;\r\n            if (FS.isMountpoint(node)) {\r\n                throw new FS.ErrnoError(10)\r\n            }\r\n            if (!FS.isDir(node.mode)) {\r\n                throw new FS.ErrnoError(54)\r\n            }\r\n        }\r\n        var mount = {\r\n            type: type,\r\n            opts: opts,\r\n            mountpoint: mountpoint,\r\n            mounts: []\r\n        };\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n        if (root) {\r\n            FS.root = mountRoot\r\n        } else if (node) {\r\n            node.mounted = mount;\r\n            if (node.mount) {\r\n                node.mount.mounts.push(mount)\r\n            }\r\n        }\r\n        return mountRoot\r\n    },\r\n    unmount: mountpoint => {\r\n        var lookup = FS.lookupPath(mountpoint, {\r\n            follow_mount: false\r\n        });\r\n        if (!FS.isMountpoint(lookup.node)) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n        Object.keys(FS.nameTable).forEach(hash => {\r\n            var current = FS.nameTable[hash];\r\n            while (current) {\r\n                var next = current.name_next;\r\n                if (mounts.includes(current.mount)) {\r\n                    FS.destroyNode(current)\r\n                }\r\n                current = next\r\n            }\r\n        });\r\n        node.mounted = null;\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1)\r\n    },\r\n    lookup: (parent, name) => {\r\n        return parent.node_ops.lookup(parent, name)\r\n    },\r\n    mknod: (path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, {\r\n            parent: true\r\n        });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === \".\" || name === \"..\") {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev)\r\n    },\r\n    create: (path, mode) => {\r\n        mode = mode !== undefined ? mode : 438;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0)\r\n    },\r\n    mkdir: (path, mode) => {\r\n        mode = mode !== undefined ? mode : 511;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0)\r\n    },\r\n    mkdirTree: (path, mode) => {\r\n        var dirs = path.split(\"/\");\r\n        var d = \"\";\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n            if (!dirs[i]) continue;\r\n            d += \"/\" + dirs[i];\r\n            try {\r\n                FS.mkdir(d, mode)\r\n            } catch (e) {\r\n                if (e.errno != 20) throw e\r\n            }\r\n        }\r\n    },\r\n    mkdev: (path, mode, dev) => {\r\n        if (typeof dev == \"undefined\") {\r\n            dev = mode;\r\n            mode = 438\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev)\r\n    },\r\n    symlink: (oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        var lookup = FS.lookupPath(newpath, {\r\n            parent: true\r\n        });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath)\r\n    },\r\n    rename: (old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        var lookup, old_dir, new_dir;\r\n        lookup = FS.lookupPath(old_path, {\r\n            parent: true\r\n        });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, {\r\n            parent: true\r\n        });\r\n        new_dir = lookup.node;\r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        if (old_dir.mount !== new_dir.mount) {\r\n            throw new FS.ErrnoError(75)\r\n        }\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== \".\") {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== \".\") {\r\n            throw new FS.ErrnoError(55)\r\n        }\r\n        var new_node;\r\n        try {\r\n            new_node = FS.lookupNode(new_dir, new_name)\r\n        } catch (e) {}\r\n        if (old_node === new_node) {\r\n            return\r\n        }\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\r\n            throw new FS.ErrnoError(10)\r\n        }\r\n        if (new_dir !== old_dir) {\r\n            errCode = FS.nodePermissions(old_dir, \"w\");\r\n            if (errCode) {\r\n                throw new FS.ErrnoError(errCode)\r\n            }\r\n        }\r\n        FS.hashRemoveNode(old_node);\r\n        try {\r\n            old_dir.node_ops.rename(old_node, new_dir, new_name)\r\n        } catch (e) {\r\n            throw e\r\n        } finally {\r\n            FS.hashAddNode(old_node)\r\n        }\r\n    },\r\n    rmdir: path => {\r\n        var lookup = FS.lookupPath(path, {\r\n            parent: true\r\n        });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10)\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node)\r\n    },\r\n    readdir: path => {\r\n        var lookup = FS.lookupPath(path, {\r\n            follow: true\r\n        });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n            throw new FS.ErrnoError(54)\r\n        }\r\n        return node.node_ops.readdir(node)\r\n    },\r\n    unlink: path => {\r\n        var lookup = FS.lookupPath(path, {\r\n            parent: true\r\n        });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10)\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node)\r\n    },\r\n    readlink: path => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link))\r\n    },\r\n    stat: (path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, {\r\n            follow: !dontFollow\r\n        });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        return node.node_ops.getattr(node)\r\n    },\r\n    lstat: path => {\r\n        return FS.stat(path, true)\r\n    },\r\n    chmod: (path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == \"string\") {\r\n            var lookup = FS.lookupPath(path, {\r\n                follow: !dontFollow\r\n            });\r\n            node = lookup.node\r\n        } else {\r\n            node = path\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        node.node_ops.setattr(node, {\r\n            mode: mode & 4095 | node.mode & ~4095,\r\n            timestamp: Date.now()\r\n        })\r\n    },\r\n    lchmod: (path, mode) => {\r\n        FS.chmod(path, mode, true)\r\n    },\r\n    fchmod: (fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        FS.chmod(stream.node, mode)\r\n    },\r\n    chown: (path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == \"string\") {\r\n            var lookup = FS.lookupPath(path, {\r\n                follow: !dontFollow\r\n            });\r\n            node = lookup.node\r\n        } else {\r\n            node = path\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        node.node_ops.setattr(node, {\r\n            timestamp: Date.now()\r\n        })\r\n    },\r\n    lchown: (path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true)\r\n    },\r\n    fchown: (fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        FS.chown(stream.node, uid, gid)\r\n    },\r\n    truncate: (path, len) => {\r\n        if (len < 0) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        var node;\r\n        if (typeof path == \"string\") {\r\n            var lookup = FS.lookupPath(path, {\r\n                follow: true\r\n            });\r\n            node = lookup.node\r\n        } else {\r\n            node = path\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n            throw new FS.ErrnoError(63)\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(31)\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        var errCode = FS.nodePermissions(node, \"w\");\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        node.node_ops.setattr(node, {\r\n            size: len,\r\n            timestamp: Date.now()\r\n        })\r\n    },\r\n    ftruncate: (fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        FS.truncate(stream.node, len)\r\n    },\r\n    utime: (path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, {\r\n            follow: true\r\n        });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n            timestamp: Math.max(atime, mtime)\r\n        })\r\n    },\r\n    open: (path, flags, mode) => {\r\n        if (path === \"\") {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        flags = typeof flags == \"string\" ? FS.modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == \"undefined\" ? 438 : mode;\r\n        if (flags & 64) {\r\n            mode = mode & 4095 | 32768\r\n        } else {\r\n            mode = 0\r\n        }\r\n        var node;\r\n        if (typeof path == \"object\") {\r\n            node = path\r\n        } else {\r\n            path = PATH.normalize(path);\r\n            try {\r\n                var lookup = FS.lookupPath(path, {\r\n                    follow: !(flags & 131072)\r\n                });\r\n                node = lookup.node\r\n            } catch (e) {}\r\n        }\r\n        var created = false;\r\n        if (flags & 64) {\r\n            if (node) {\r\n                if (flags & 128) {\r\n                    throw new FS.ErrnoError(20)\r\n                }\r\n            } else {\r\n                node = FS.mknod(path, mode, 0);\r\n                created = true\r\n            }\r\n        }\r\n        if (!node) {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        if (FS.isChrdev(node.mode)) {\r\n            flags &= ~512\r\n        }\r\n        if (flags & 65536 && !FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54)\r\n        }\r\n        if (!created) {\r\n            var errCode = FS.mayOpen(node, flags);\r\n            if (errCode) {\r\n                throw new FS.ErrnoError(errCode)\r\n            }\r\n        }\r\n        if (flags & 512 && !created) {\r\n            FS.truncate(node, 0)\r\n        }\r\n        flags &= ~(128 | 512 | 131072);\r\n        var stream = FS.createStream({\r\n            node: node,\r\n            path: FS.getPath(node),\r\n            flags: flags,\r\n            seekable: true,\r\n            position: 0,\r\n            stream_ops: node.stream_ops,\r\n            ungotten: [],\r\n            error: false\r\n        });\r\n        if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream)\r\n        }\r\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\r\n            if (!FS.readFiles) FS.readFiles = {};\r\n            if (!(path in FS.readFiles)) {\r\n                FS.readFiles[path] = 1\r\n            }\r\n        }\r\n        return stream\r\n    },\r\n    close: stream => {\r\n        if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if (stream.getdents) stream.getdents = null;\r\n        try {\r\n            if (stream.stream_ops.close) {\r\n                stream.stream_ops.close(stream)\r\n            }\r\n        } catch (e) {\r\n            throw e\r\n        } finally {\r\n            FS.closeStream(stream.fd)\r\n        }\r\n        stream.fd = null\r\n    },\r\n    isClosed: stream => {\r\n        return stream.fd === null\r\n    },\r\n    llseek: (stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n            throw new FS.ErrnoError(70)\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position\r\n    },\r\n    read: (stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n            throw new FS.ErrnoError(31)\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        var seeking = typeof position != \"undefined\";\r\n        if (!seeking) {\r\n            position = stream.position\r\n        } else if (!stream.seekable) {\r\n            throw new FS.ErrnoError(70)\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead\r\n    },\r\n    write: (stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n            throw new FS.ErrnoError(31)\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n            FS.llseek(stream, 0, 2)\r\n        }\r\n        var seeking = typeof position != \"undefined\";\r\n        if (!seeking) {\r\n            position = stream.position\r\n        } else if (!stream.seekable) {\r\n            throw new FS.ErrnoError(70)\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten\r\n    },\r\n    allocate: (stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n            throw new FS.ErrnoError(28)\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n            throw new FS.ErrnoError(8)\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43)\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n            throw new FS.ErrnoError(138)\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length)\r\n    },\r\n    mmap: (stream, length, position, prot, flags) => {\r\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\r\n            throw new FS.ErrnoError(2)\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n            throw new FS.ErrnoError(2)\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n            throw new FS.ErrnoError(43)\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags)\r\n    },\r\n    msync: (stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream || !stream.stream_ops.msync) {\r\n            return 0\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags)\r\n    },\r\n    munmap: stream => 0,\r\n    ioctl: (stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n            throw new FS.ErrnoError(59)\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg)\r\n    },\r\n    readFile: (path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || \"binary\";\r\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"')\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === \"utf8\") {\r\n            ret = UTF8ArrayToString(buf, 0)\r\n        } else if (opts.encoding === \"binary\") {\r\n            ret = buf\r\n        }\r\n        FS.close(stream);\r\n        return ret\r\n    },\r\n    writeFile: (path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == \"string\") {\r\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\r\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n            FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn)\r\n        } else if (ArrayBuffer.isView(data)) {\r\n            FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn)\r\n        } else {\r\n            throw new Error(\"Unsupported data type\")\r\n        }\r\n        FS.close(stream)\r\n    },\r\n    cwd: () => FS.currentPath,\r\n    chdir: path => {\r\n        var lookup = FS.lookupPath(path, {\r\n            follow: true\r\n        });\r\n        if (lookup.node === null) {\r\n            throw new FS.ErrnoError(44)\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n            throw new FS.ErrnoError(54)\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\r\n        if (errCode) {\r\n            throw new FS.ErrnoError(errCode)\r\n        }\r\n        FS.currentPath = lookup.path\r\n    },\r\n    createDefaultDirectories: () => {\r\n        FS.mkdir(\"/tmp\");\r\n        FS.mkdir(\"/home\");\r\n        FS.mkdir(\"/home/web_user\")\r\n    },\r\n    createDefaultDevices: () => {\r\n        FS.mkdir(\"/dev\");\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n            read: () => 0,\r\n            write: (stream, buffer, offset, length, pos) => length\r\n        });\r\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\r\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\r\n        var random_device = getRandomDevice();\r\n        FS.createDevice(\"/dev\", \"random\", random_device);\r\n        FS.createDevice(\"/dev\", \"urandom\", random_device);\r\n        FS.mkdir(\"/dev/shm\");\r\n        FS.mkdir(\"/dev/shm/tmp\")\r\n    },\r\n    createSpecialDirectories: () => {\r\n        FS.mkdir(\"/proc\");\r\n        var proc_self = FS.mkdir(\"/proc/self\");\r\n        FS.mkdir(\"/proc/self/fd\");\r\n        FS.mount({\r\n            mount: () => {\r\n                var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\r\n                node.node_ops = {\r\n                    lookup: (parent, name) => {\r\n                        var fd = +name;\r\n                        var stream = FS.getStream(fd);\r\n                        if (!stream) throw new FS.ErrnoError(8);\r\n                        var ret = {\r\n                            parent: null,\r\n                            mount: {\r\n                                mountpoint: \"fake\"\r\n                            },\r\n                            node_ops: {\r\n                                readlink: () => stream.path\r\n                            }\r\n                        };\r\n                        ret.parent = ret;\r\n                        return ret\r\n                    }\r\n                };\r\n                return node\r\n            }\r\n        }, {}, \"/proc/self/fd\")\r\n    },\r\n    createStandardStreams: () => {\r\n        if (Module[\"stdin\"]) {\r\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"])\r\n        } else {\r\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\")\r\n        }\r\n        if (Module[\"stdout\"]) {\r\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"])\r\n        } else {\r\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\")\r\n        }\r\n        if (Module[\"stderr\"]) {\r\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"])\r\n        } else {\r\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\")\r\n        }\r\n        var stdin = FS.open(\"/dev/stdin\", 0);\r\n        var stdout = FS.open(\"/dev/stdout\", 1);\r\n        var stderr = FS.open(\"/dev/stderr\", 1)\r\n    },\r\n    ensureErrnoError: () => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = function ErrnoError(errno, node) {\r\n            this.node = node;\r\n            this.setErrno = function (errno) {\r\n                this.errno = errno\r\n            };\r\n            this.setErrno(errno);\r\n            this.message = \"FS error\"\r\n        };\r\n        FS.ErrnoError.prototype = new Error;\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        [44].forEach(code => {\r\n            FS.genericErrors[code] = new FS.ErrnoError(code);\r\n            FS.genericErrors[code].stack = \"<generic error, no stack>\"\r\n        })\r\n    },\r\n    staticInit: () => {\r\n        FS.ensureErrnoError();\r\n        FS.nameTable = new Array(4096);\r\n        FS.mount(MEMFS, {}, \"/\");\r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n        FS.filesystems = {\r\n            \"MEMFS\": MEMFS\r\n        }\r\n    },\r\n    init: (input, output, error) => {\r\n        FS.init.initialized = true;\r\n        FS.ensureErrnoError();\r\n        Module[\"stdin\"] = input || Module[\"stdin\"];\r\n        Module[\"stdout\"] = output || Module[\"stdout\"];\r\n        Module[\"stderr\"] = error || Module[\"stderr\"];\r\n        FS.createStandardStreams()\r\n    },\r\n    quit: () => {\r\n        FS.init.initialized = false;\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n            var stream = FS.streams[i];\r\n            if (!stream) {\r\n                continue\r\n            }\r\n            FS.close(stream)\r\n        }\r\n    },\r\n    getMode: (canRead, canWrite) => {\r\n        var mode = 0;\r\n        if (canRead) mode |= 292 | 73;\r\n        if (canWrite) mode |= 146;\r\n        return mode\r\n    },\r\n    findObject: (path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n            return null\r\n        }\r\n        return ret.object\r\n    },\r\n    analyzePath: (path, dontResolveLastLink) => {\r\n        try {\r\n            var lookup = FS.lookupPath(path, {\r\n                follow: !dontResolveLastLink\r\n            });\r\n            path = lookup.path\r\n        } catch (e) {}\r\n        var ret = {\r\n            isRoot: false,\r\n            exists: false,\r\n            error: 0,\r\n            name: null,\r\n            path: null,\r\n            object: null,\r\n            parentExists: false,\r\n            parentPath: null,\r\n            parentObject: null\r\n        };\r\n        try {\r\n            var lookup = FS.lookupPath(path, {\r\n                parent: true\r\n            });\r\n            ret.parentExists = true;\r\n            ret.parentPath = lookup.path;\r\n            ret.parentObject = lookup.node;\r\n            ret.name = PATH.basename(path);\r\n            lookup = FS.lookupPath(path, {\r\n                follow: !dontResolveLastLink\r\n            });\r\n            ret.exists = true;\r\n            ret.path = lookup.path;\r\n            ret.object = lookup.node;\r\n            ret.name = lookup.node.name;\r\n            ret.isRoot = lookup.path === \"/\"\r\n        } catch (e) {\r\n            ret.error = e.errno\r\n        }\r\n        return ret\r\n    },\r\n    createPath: (parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n        var parts = path.split(\"/\").reverse();\r\n        while (parts.length) {\r\n            var part = parts.pop();\r\n            if (!part) continue;\r\n            var current = PATH.join2(parent, part);\r\n            try {\r\n                FS.mkdir(current)\r\n            } catch (e) {}\r\n            parent = current\r\n        }\r\n        return current\r\n    },\r\n    createFile: (parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        return FS.create(path, mode)\r\n    },\r\n    createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n            parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n            path = name ? PATH.join2(parent, name) : parent\r\n        }\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n            if (typeof data == \"string\") {\r\n                var arr = new Array(data.length);\r\n                for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n                data = arr\r\n            }\r\n            FS.chmod(node, mode | 146);\r\n            var stream = FS.open(node, 577);\r\n            FS.write(stream, data, 0, data.length, 0, canOwn);\r\n            FS.close(stream);\r\n            FS.chmod(node, mode)\r\n        }\r\n        return node\r\n    },\r\n    createDevice: (parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        FS.registerDevice(dev, {\r\n            open: stream => {\r\n                stream.seekable = false\r\n            },\r\n            close: stream => {\r\n                if (output && output.buffer && output.buffer.length) {\r\n                    output(10)\r\n                }\r\n            },\r\n            read: (stream, buffer, offset, length, pos) => {\r\n                var bytesRead = 0;\r\n                for (var i = 0; i < length; i++) {\r\n                    var result;\r\n                    try {\r\n                        result = input()\r\n                    } catch (e) {\r\n                        throw new FS.ErrnoError(29)\r\n                    }\r\n                    if (result === undefined && bytesRead === 0) {\r\n                        throw new FS.ErrnoError(6)\r\n                    }\r\n                    if (result === null || result === undefined) break;\r\n                    bytesRead++;\r\n                    buffer[offset + i] = result\r\n                }\r\n                if (bytesRead) {\r\n                    stream.node.timestamp = Date.now()\r\n                }\r\n                return bytesRead\r\n            },\r\n            write: (stream, buffer, offset, length, pos) => {\r\n                for (var i = 0; i < length; i++) {\r\n                    try {\r\n                        output(buffer[offset + i])\r\n                    } catch (e) {\r\n                        throw new FS.ErrnoError(29)\r\n                    }\r\n                }\r\n                if (length) {\r\n                    stream.node.timestamp = Date.now()\r\n                }\r\n                return i\r\n            }\r\n        });\r\n        return FS.mkdev(path, mode, dev)\r\n    },\r\n    forceLoadFile: obj => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != \"undefined\") {\r\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")\r\n        } else if (read_) {\r\n            try {\r\n                obj.contents = intArrayFromString(read_(obj.url), true);\r\n                obj.usedBytes = obj.contents.length\r\n            } catch (e) {\r\n                throw new FS.ErrnoError(29)\r\n            }\r\n        } else {\r\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\")\r\n        }\r\n    },\r\n    createLazyFile: (parent, name, url, canRead, canWrite) => {\r\n        function LazyUint8Array() {\r\n            this.lengthKnown = false;\r\n            this.chunks = []\r\n        }\r\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\r\n            if (idx > this.length - 1 || idx < 0) {\r\n                return undefined\r\n            }\r\n            var chunkOffset = idx % this.chunkSize;\r\n            var chunkNum = idx / this.chunkSize | 0;\r\n            return this.getter(chunkNum)[chunkOffset]\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n            this.getter = getter\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n            var xhr = new XMLHttpRequest;\r\n            xhr.open(\"HEAD\", url, false);\r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n            var header;\r\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n            var chunkSize = 1024 * 1024;\r\n            if (!hasByteServing) chunkSize = datalength;\r\n            var doXHR = (from, to) => {\r\n                if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n                if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n                var xhr = new XMLHttpRequest;\r\n                xhr.open(\"GET\", url, false);\r\n                if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n                xhr.responseType = \"arraybuffer\";\r\n                if (xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")\r\n                }\r\n                xhr.send(null);\r\n                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n                if (xhr.response !== undefined) {\r\n                    return new Uint8Array(xhr.response || [])\r\n                }\r\n                return intArrayFromString(xhr.responseText || \"\", true)\r\n            };\r\n            //var lazyArray = this;\r\n            this.setDataGetter(chunkNum => {\r\n                var start = chunkNum * chunkSize;\r\n                var end = (chunkNum + 1) * chunkSize - 1;\r\n                end = Math.min(end, datalength - 1);\r\n                if (typeof this.chunks[chunkNum] == \"undefined\") {\r\n                    this.chunks[chunkNum] = doXHR(start, end)\r\n                }\r\n                if (typeof this.chunks[chunkNum] == \"undefined\") throw new Error(\"doXHR failed!\");\r\n                return this.chunks[chunkNum]\r\n            });\r\n            if (usesGzip || !datalength) {\r\n                chunkSize = datalength = 1;\r\n                datalength = this.getter(0).length;\r\n                chunkSize = datalength;\r\n                out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")\r\n            }\r\n            this._length = datalength;\r\n            this._chunkSize = chunkSize;\r\n            this.lengthKnown = true\r\n        };\r\n        if (typeof XMLHttpRequest != \"undefined\") {\r\n            if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\r\n            var lazyArray = new LazyUint8Array;\r\n            Object.defineProperties(lazyArray, {\r\n                length: {\r\n                    get: function () {\r\n                        if (!this.lengthKnown) {\r\n                            this.cacheLength()\r\n                        }\r\n                        return this._length\r\n                    }\r\n                },\r\n                chunkSize: {\r\n                    get: function () {\r\n                        if (!this.lengthKnown) {\r\n                            this.cacheLength()\r\n                        }\r\n                        return this._chunkSize\r\n                    }\r\n                }\r\n            });\r\n            var properties = {\r\n                isDevice: false,\r\n                contents: lazyArray\r\n            }\r\n        } else {\r\n            var properties = {\r\n                isDevice: false,\r\n                url: url\r\n            }\r\n        }\r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        if (properties.contents) {\r\n            node.contents = properties.contents\r\n        } else if (properties.url) {\r\n            node.contents = null;\r\n            node.url = properties.url\r\n        }\r\n        Object.defineProperties(node, {\r\n            usedBytes: {\r\n                get: function () {\r\n                    return this.contents.length\r\n                }\r\n            }\r\n        });\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach(key => {\r\n            var fn = node.stream_ops[key];\r\n            stream_ops[key] = function forceLoadLazyFile() {\r\n                FS.forceLoadFile(node);\r\n                return fn.apply(null, arguments)\r\n            }\r\n        });\r\n\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n            var contents = stream.node.contents;\r\n            if (position >= contents.length) return 0;\r\n            var size = Math.min(contents.length - position, length);\r\n            if (contents.slice) {\r\n                for (var i = 0; i < size; i++) {\r\n                    buffer[offset + i] = contents[position + i]\r\n                }\r\n            } else {\r\n                for (var i = 0; i < size; i++) {\r\n                    buffer[offset + i] = contents.get(position + i)\r\n                }\r\n            }\r\n            return size\r\n        }\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n            FS.forceLoadFile(node);\r\n            return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n            FS.forceLoadFile(node);\r\n            var ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n                throw new FS.ErrnoError(48)\r\n            }\r\n            writeChunks(stream, HEAP8, ptr, length, position);\r\n            return {\r\n                ptr: ptr,\r\n                allocated: true\r\n            }\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node\r\n    },\r\n    createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n        var dep = getUniqueRunDependency(\"cp \" + fullname);\r\n\r\n        function processData(byteArray) {\r\n            function finish(byteArray) {\r\n                if (preFinish) preFinish();\r\n                if (!dontCreateFile) {\r\n                    FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn)\r\n                }\r\n                if (onload) onload();\r\n                removeRunDependency(dep)\r\n            }\r\n            if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n                    if (onerror) onerror();\r\n                    removeRunDependency(dep)\r\n                })) {\r\n                return\r\n            }\r\n            finish(byteArray)\r\n        }\r\n        addRunDependency(dep);\r\n        if (typeof url == \"string\") {\r\n            asyncLoad(url, byteArray => processData(byteArray), onerror)\r\n        } else {\r\n            processData(url)\r\n        }\r\n    },\r\n    indexedDB: () => {\r\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB\r\n    },\r\n    DB_NAME: () => {\r\n        return \"EM_FS_\" + window.location.pathname\r\n    },\r\n    DB_VERSION: 20,\r\n    DB_STORE_NAME: \"FILE_DATA\",\r\n    saveFilesToDB: (paths, onload, onerror) => {\r\n        onload = onload || (() => {return;});\r\n        onerror = onerror || (() => {return;});\r\n        var indexedDB = FS.indexedDB();\r\n        try {\r\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\r\n        } catch (e) {\r\n            return onerror(e)\r\n        }\r\n        openRequest.onupgradeneeded = () => {\r\n            out(\"creating db\");\r\n            var db = openRequest.result;\r\n            db.createObjectStore(FS.DB_STORE_NAME)\r\n        };\r\n        openRequest.onsuccess = () => {\r\n            var db = openRequest.result;\r\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\r\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n            var ok = 0,\r\n                fail = 0,\r\n                total = paths.length;\r\n\r\n            function finish() {\r\n                if (fail == 0) onload();\r\n                else onerror()\r\n            }\r\n            paths.forEach(path => {\r\n                var putRequest = files.put(FS.analyzePath(path).object.contents, path);\r\n                putRequest.onsuccess = () => {\r\n                    ok++;\r\n                    if (ok + fail == total) finish()\r\n                };\r\n                putRequest.onerror = () => {\r\n                    fail++;\r\n                    if (ok + fail == total) finish()\r\n                }\r\n            });\r\n            transaction.onerror = onerror\r\n        };\r\n        openRequest.onerror = onerror\r\n    },\r\n    loadFilesFromDB: (paths, onload, onerror) => {\r\n        onload = onload || (() => {return;});\r\n        onerror = onerror || (() => {return;});\r\n        var indexedDB = FS.indexedDB();\r\n        try {\r\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\r\n        } catch (e) {\r\n            return onerror(e)\r\n        }\r\n        openRequest.onupgradeneeded = onerror;\r\n        openRequest.onsuccess = () => {\r\n            var db = openRequest.result;\r\n            try {\r\n                var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\")\r\n            } catch (e) {\r\n                onerror(e);\r\n                return\r\n            }\r\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n            var ok = 0,\r\n                fail = 0,\r\n                total = paths.length;\r\n\r\n            function finish() {\r\n                if (fail == 0) onload();\r\n                else onerror()\r\n            }\r\n            paths.forEach(path => {\r\n                var getRequest = files.get(path);\r\n                getRequest.onsuccess = () => {\r\n                    if (FS.analyzePath(path).exists) {\r\n                        FS.unlink(path)\r\n                    }\r\n                    FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\r\n                    ok++;\r\n                    if (ok + fail == total) finish()\r\n                };\r\n                getRequest.onerror = () => {\r\n                    fail++;\r\n                    if (ok + fail == total) finish()\r\n                }\r\n            });\r\n            transaction.onerror = onerror\r\n        };\r\n        openRequest.onerror = onerror\r\n    }\r\n};\r\nvar SYSCALLS = {\r\n    DEFAULT_POLLMASK: 5,\r\n    calculateAt: function (dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n            return path\r\n        }\r\n        var dir;\r\n        if (dirfd === -100) {\r\n            dir = FS.cwd()\r\n        } else {\r\n            var dirstream = FS.getStream(dirfd);\r\n            if (!dirstream) throw new FS.ErrnoError(8);\r\n            dir = dirstream.path\r\n        }\r\n        if (path.length == 0) {\r\n            if (!allowEmpty) {\r\n                throw new FS.ErrnoError(44)\r\n            }\r\n            return dir\r\n        }\r\n        return PATH.join2(dir, path)\r\n    },\r\n    doStat: function (func, path, buf) {\r\n        try {\r\n            var stat = func(path)\r\n        } catch (e) {\r\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n                return -54\r\n            }\r\n            throw e\r\n        }\r\n        HEAP32[buf >> 2] = stat.dev;\r\n        HEAP32[buf + 8 >> 2] = stat.ino;\r\n        HEAP32[buf + 12 >> 2] = stat.mode;\r\n        HEAP32[buf + 16 >> 2] = stat.nlink;\r\n        HEAP32[buf + 20 >> 2] = stat.uid;\r\n        HEAP32[buf + 24 >> 2] = stat.gid;\r\n        HEAP32[buf + 28 >> 2] = stat.rdev;\r\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\r\n        HEAP32[buf + 48 >> 2] = 4096;\r\n        HEAP32[buf + 52 >> 2] = stat.blocks;\r\n        tempI64 = [Math.floor(stat.atime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.atime.getTime() / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 56 >> 2] = tempI64[0], HEAP32[buf + 60 >> 2] = tempI64[1];\r\n        HEAP32[buf + 64 >> 2] = 0;\r\n        tempI64 = [Math.floor(stat.mtime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.mtime.getTime() / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 72 >> 2] = tempI64[0], HEAP32[buf + 76 >> 2] = tempI64[1];\r\n        HEAP32[buf + 80 >> 2] = 0;\r\n        tempI64 = [Math.floor(stat.ctime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.ctime.getTime() / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 88 >> 2] = tempI64[0], HEAP32[buf + 92 >> 2] = tempI64[1];\r\n        HEAP32[buf + 96 >> 2] = 0;\r\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 104 >> 2] = tempI64[0], HEAP32[buf + 108 >> 2] = tempI64[1];\r\n        return 0\r\n    },\r\n    doMsync: function (addr, stream, len, flags, offset) {\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags)\r\n    },\r\n    varargs: undefined,\r\n    get: function () {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\r\n        return ret\r\n    },\r\n    getStr: function (ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret\r\n    },\r\n    getStreamFromFD: function (fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream\r\n    }\r\n};\r\n\r\nfunction setErrNo(value) {\r\n    HEAP32[___errno_location() >> 2] = value;\r\n    return value\r\n}\r\n\r\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\r\n    SYSCALLS.varargs = varargs;\r\n    try {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        switch (cmd) {\r\n            case 0: {\r\n                var arg = SYSCALLS.get();\r\n                if (arg < 0) {\r\n                    return -28\r\n                }\r\n                var newStream;\r\n                newStream = FS.createStream(stream, arg);\r\n                return newStream.fd\r\n            }\r\n            case 1:\r\n            case 2:\r\n                return 0;\r\n            case 3:\r\n                return stream.flags;\r\n            case 4: {\r\n                var arg = SYSCALLS.get();\r\n                stream.flags |= arg;\r\n                return 0\r\n            }\r\n            case 5: {\r\n                var arg = SYSCALLS.get();\r\n                var offset = 0;\r\n                HEAP16[arg + offset >> 1] = 2;\r\n                return 0\r\n            }\r\n            case 6:\r\n            case 7:\r\n                return 0;\r\n            case 16:\r\n            case 8:\r\n                return -28;\r\n            case 9:\r\n                setErrNo(28);\r\n                return -1;\r\n            default: {\r\n                return -28\r\n            }\r\n        }\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return -e.errno\r\n    }\r\n}\r\n\r\nfunction ___syscall_ioctl(fd, op, varargs) {\r\n    SYSCALLS.varargs = varargs;\r\n    try {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        switch (op) {\r\n            case 21509:\r\n            case 21505: {\r\n                if (!stream.tty) return -59;\r\n                return 0\r\n            }\r\n            case 21510:\r\n            case 21511:\r\n            case 21512:\r\n            case 21506:\r\n            case 21507:\r\n            case 21508: {\r\n                if (!stream.tty) return -59;\r\n                return 0\r\n            }\r\n            case 21519: {\r\n                if (!stream.tty) return -59;\r\n                var argp = SYSCALLS.get();\r\n                HEAP32[argp >> 2] = 0;\r\n                return 0\r\n            }\r\n            case 21520: {\r\n                if (!stream.tty) return -59;\r\n                return -28\r\n            }\r\n            case 21531: {\r\n                var argp = SYSCALLS.get();\r\n                return FS.ioctl(stream, op, argp)\r\n            }\r\n            case 21523: {\r\n                if (!stream.tty) return -59;\r\n                return 0\r\n            }\r\n            case 21524: {\r\n                if (!stream.tty) return -59;\r\n                return 0\r\n            }\r\n            default:\r\n                return -28\r\n        }\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return -e.errno\r\n    }\r\n}\r\n\r\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\r\n    SYSCALLS.varargs = varargs;\r\n    try {\r\n        path = SYSCALLS.getStr(path);\r\n        path = SYSCALLS.calculateAt(dirfd, path);\r\n        var mode = varargs ? SYSCALLS.get() : 0;\r\n        return FS.open(path, flags, mode).fd\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return -e.errno\r\n    }\r\n}\r\nvar PIPEFS = {\r\n    BUCKET_BUFFER_SIZE: 8192,\r\n    mount: function (mount) {\r\n        return FS.createNode(null, \"/\", 16384 | 511, 0)\r\n    },\r\n    createPipe: function () {\r\n        var pipe = {\r\n            buckets: [],\r\n            refcnt: 2\r\n        };\r\n        pipe.buckets.push({\r\n            buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\r\n            offset: 0,\r\n            roffset: 0\r\n        });\r\n        var rName = PIPEFS.nextname();\r\n        var wName = PIPEFS.nextname();\r\n        var rNode = FS.createNode(PIPEFS.root, rName, 4096, 0);\r\n        var wNode = FS.createNode(PIPEFS.root, wName, 4096, 0);\r\n        rNode.pipe = pipe;\r\n        wNode.pipe = pipe;\r\n        var readableStream = FS.createStream({\r\n            path: rName,\r\n            node: rNode,\r\n            flags: 0,\r\n            seekable: false,\r\n            stream_ops: PIPEFS.stream_ops\r\n        });\r\n        rNode.stream = readableStream;\r\n        var writableStream = FS.createStream({\r\n            path: wName,\r\n            node: wNode,\r\n            flags: 1,\r\n            seekable: false,\r\n            stream_ops: PIPEFS.stream_ops\r\n        });\r\n        wNode.stream = writableStream;\r\n        return {\r\n            readable_fd: readableStream.fd,\r\n            writable_fd: writableStream.fd\r\n        }\r\n    },\r\n    stream_ops: {\r\n        poll: function (stream) {\r\n            var pipe = stream.node.pipe;\r\n            if ((stream.flags & 2097155) === 1) {\r\n                return 256 | 4\r\n            }\r\n            if (pipe.buckets.length > 0) {\r\n                for (var i = 0; i < pipe.buckets.length; i++) {\r\n                    var bucket = pipe.buckets[i];\r\n                    if (bucket.offset - bucket.roffset > 0) {\r\n                        return 64 | 1\r\n                    }\r\n                }\r\n            }\r\n            return 0\r\n        },\r\n        ioctl: function (stream, request, varargs) {\r\n            return 28\r\n        },\r\n        fsync: function (stream) {\r\n            return 28\r\n        },\r\n        read: function (stream, buffer, offset, length, position) {\r\n            var pipe = stream.node.pipe;\r\n            var currentLength = 0;\r\n            for (var i = 0; i < pipe.buckets.length; i++) {\r\n                var bucket = pipe.buckets[i];\r\n                currentLength += bucket.offset - bucket.roffset\r\n            }\r\n            assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\r\n            var data = buffer.subarray(offset, offset + length);\r\n            if (length <= 0) {\r\n                return 0\r\n            }\r\n            if (currentLength == 0) {\r\n                throw new FS.ErrnoError(6)\r\n            }\r\n            var toRead = Math.min(currentLength, length);\r\n            var totalRead = toRead;\r\n            var toRemove = 0;\r\n            for (var i = 0; i < pipe.buckets.length; i++) {\r\n                var currBucket = pipe.buckets[i];\r\n                var bucketSize = currBucket.offset - currBucket.roffset;\r\n                if (toRead <= bucketSize) {\r\n                    var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\r\n                    if (toRead < bucketSize) {\r\n                        tmpSlice = tmpSlice.subarray(0, toRead);\r\n                        currBucket.roffset += toRead\r\n                    } else {\r\n                        toRemove++\r\n                    }\r\n                    data.set(tmpSlice);\r\n                    break\r\n                } else {\r\n                    var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\r\n                    data.set(tmpSlice);\r\n                    data = data.subarray(tmpSlice.byteLength);\r\n                    toRead -= tmpSlice.byteLength;\r\n                    toRemove++\r\n                }\r\n            }\r\n            if (toRemove && toRemove == pipe.buckets.length) {\r\n                toRemove--;\r\n                pipe.buckets[toRemove].offset = 0;\r\n                pipe.buckets[toRemove].roffset = 0\r\n            }\r\n            pipe.buckets.splice(0, toRemove);\r\n            return totalRead\r\n        },\r\n        write: function (stream, buffer, offset, length, position) {\r\n            var pipe = stream.node.pipe;\r\n            assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\r\n            var data = buffer.subarray(offset, offset + length);\r\n            var dataLen = data.byteLength;\r\n            if (dataLen <= 0) {\r\n                return 0\r\n            }\r\n            var currBucket = null;\r\n            if (pipe.buckets.length == 0) {\r\n                currBucket = {\r\n                    buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\r\n                    offset: 0,\r\n                    roffset: 0\r\n                };\r\n                pipe.buckets.push(currBucket)\r\n            } else {\r\n                currBucket = pipe.buckets[pipe.buckets.length - 1]\r\n            }\r\n            assert(currBucket.offset <= PIPEFS.BUCKET_BUFFER_SIZE);\r\n            var freeBytesInCurrBuffer = PIPEFS.BUCKET_BUFFER_SIZE - currBucket.offset;\r\n            if (freeBytesInCurrBuffer >= dataLen) {\r\n                currBucket.buffer.set(data, currBucket.offset);\r\n                currBucket.offset += dataLen;\r\n                return dataLen\r\n            } else if (freeBytesInCurrBuffer > 0) {\r\n                currBucket.buffer.set(data.subarray(0, freeBytesInCurrBuffer), currBucket.offset);\r\n                currBucket.offset += freeBytesInCurrBuffer;\r\n                data = data.subarray(freeBytesInCurrBuffer, data.byteLength)\r\n            }\r\n            var numBuckets = data.byteLength / PIPEFS.BUCKET_BUFFER_SIZE | 0;\r\n            var remElements = data.byteLength % PIPEFS.BUCKET_BUFFER_SIZE;\r\n            for (var i = 0; i < numBuckets; i++) {\r\n                var newBucket = {\r\n                    buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\r\n                    offset: PIPEFS.BUCKET_BUFFER_SIZE,\r\n                    roffset: 0\r\n                };\r\n                pipe.buckets.push(newBucket);\r\n                newBucket.buffer.set(data.subarray(0, PIPEFS.BUCKET_BUFFER_SIZE));\r\n                data = data.subarray(PIPEFS.BUCKET_BUFFER_SIZE, data.byteLength)\r\n            }\r\n            if (remElements > 0) {\r\n                var newBucket = {\r\n                    buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\r\n                    offset: data.byteLength,\r\n                    roffset: 0\r\n                };\r\n                pipe.buckets.push(newBucket);\r\n                newBucket.buffer.set(data)\r\n            }\r\n            return dataLen\r\n        },\r\n        close: function (stream) {\r\n            var pipe = stream.node.pipe;\r\n            pipe.refcnt--;\r\n            if (pipe.refcnt === 0) {\r\n                pipe.buckets = null\r\n            }\r\n        }\r\n    },\r\n    nextname: function () {\r\n        if (!PIPEFS.nextname.current) {\r\n            PIPEFS.nextname.current = 0\r\n        }\r\n        return \"pipe[\" + PIPEFS.nextname.current++ + \"]\"\r\n    }\r\n};\r\n\r\nfunction ___syscall_pipe(fdPtr) {\r\n    try {\r\n        if (fdPtr == 0) {\r\n            throw new FS.ErrnoError(21)\r\n        }\r\n        var res = PIPEFS.createPipe();\r\n        HEAP32[fdPtr >> 2] = res.readable_fd;\r\n        HEAP32[fdPtr + 4 >> 2] = res.writable_fd;\r\n        return 0\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return -e.errno\r\n    }\r\n}\r\n\r\nfunction __emscripten_date_now() {\r\n    return Date.now()\r\n}\r\nvar nowIsMonotonic = true;\r\n\r\nfunction __emscripten_get_now_is_monotonic() {\r\n    return nowIsMonotonic\r\n}\r\n\r\nfunction _abort() {\r\n    abort(\"\")\r\n}\r\nvar _emscripten_get_now;\r\n_emscripten_get_now = () => performance.now();\r\n\r\nfunction _emscripten_memcpy_big(dest, src, num) {\r\n    HEAPU8.copyWithin(dest, src, src + num)\r\n}\r\n\r\nfunction abortOnCannotGrowMemory(requestedSize) {\r\n    abort(\"OOM\")\r\n}\r\n\r\nfunction _emscripten_resize_heap(requestedSize) {\r\n    var oldSize = HEAPU8.length;\r\n    requestedSize = requestedSize >>> 0;\r\n    abortOnCannotGrowMemory(requestedSize)\r\n}\r\nvar ENV = {};\r\n\r\nfunction getExecutableName() {\r\n    return thisProgram || \"./this.program\"\r\n}\r\n\r\nfunction getEnvStrings() {\r\n    if (!getEnvStrings.strings) {\r\n        var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\r\n        var env = {\r\n            \"USER\": \"web_user\",\r\n            \"LOGNAME\": \"web_user\",\r\n            \"PATH\": \"/\",\r\n            \"PWD\": \"/\",\r\n            \"HOME\": \"/home/web_user\",\r\n            \"LANG\": lang,\r\n            \"_\": getExecutableName()\r\n        };\r\n        for (var x in ENV) {\r\n            if (ENV[x] === undefined) delete env[x];\r\n            else env[x] = ENV[x]\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n            strings.push(x + \"=\" + env[x])\r\n        }\r\n        getEnvStrings.strings = strings\r\n    }\r\n    return getEnvStrings.strings\r\n}\r\n\r\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\r\n    for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i)\r\n    }\r\n    if (!dontAddNull) HEAP8[buffer >> 0] = 0\r\n}\r\n\r\nfunction _environ_get(__environ, environ_buf) {\r\n    var bufSize = 0;\r\n    getEnvStrings().forEach(function (string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[__environ + i * 4 >> 2] = ptr;\r\n        writeAsciiToMemory(string, ptr);\r\n        bufSize += string.length + 1\r\n    });\r\n    return 0\r\n}\r\n\r\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n    var strings = getEnvStrings();\r\n    HEAPU32[penviron_count >> 2] = strings.length;\r\n    var bufSize = 0;\r\n    strings.forEach(function (string) {\r\n        bufSize += string.length + 1\r\n    });\r\n    HEAPU32[penviron_buf_size >> 2] = bufSize;\r\n    return 0\r\n}\r\n\r\nfunction _proc_exit(code) {\r\n    EXITSTATUS = code;\r\n    if (!keepRuntimeAlive()) {\r\n        ABORT = true\r\n    }\r\n    quit_(code, new ExitStatus(code))\r\n}\r\n\r\nfunction exitJS(status, implicit) {\r\n    EXITSTATUS = status;\r\n    _proc_exit(status)\r\n}\r\nvar _exit = exitJS;\r\n\r\nfunction _fd_close(fd) {\r\n    try {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        FS.close(stream);\r\n        return 0\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return e.errno\r\n    }\r\n}\r\n\r\nfunction _fd_fdstat_get(fd, pbuf) {\r\n    try {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        var type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;\r\n        HEAP8[pbuf >> 0] = type;\r\n        return 0\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return e.errno\r\n    }\r\n}\r\n\r\nfunction doReadv(stream, iov, iovcnt, offset) {\r\n    var ret = 0;\r\n    for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[iov >> 2];\r\n        var len = HEAPU32[iov + 4 >> 2];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction _fd_read(fd, iov, iovcnt, pnum) {\r\n    try {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        var num = doReadv(stream, iov, iovcnt);\r\n        HEAP32[pnum >> 2] = num;\r\n        return 0\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return e.errno\r\n    }\r\n}\r\n\r\nfunction convertI32PairToI53Checked(lo, hi) {\r\n    return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN\r\n}\r\n\r\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n    try {\r\n        var offset = convertI32PairToI53Checked(offset_low, offset_high);\r\n        if (isNaN(offset)) return 61;\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        FS.llseek(stream, offset, whence);\r\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\r\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\r\n        return 0\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return e.errno\r\n    }\r\n}\r\n\r\nfunction doWritev(stream, iov, iovcnt, offset) {\r\n    var ret = 0;\r\n    for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[iov >> 2];\r\n        var len = HEAPU32[iov + 4 >> 2];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction _fd_write(fd, iov, iovcnt, pnum) {\r\n    try {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        var num = doWritev(stream, iov, iovcnt);\r\n        HEAPU32[pnum >> 2] = num;\r\n        return 0\r\n    } catch (e) {\r\n        if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n        return e.errno\r\n    }\r\n}\r\n\r\nfunction _getentropy(buffer, size) {\r\n    if (!_getentropy.randomDevice) {\r\n        _getentropy.randomDevice = getRandomDevice()\r\n    }\r\n    for (var i = 0; i < size; i++) {\r\n        HEAP8[buffer + i >> 0] = _getentropy.randomDevice()\r\n    }\r\n    return 0\r\n}\r\n\r\nfunction __isLeapYear(year) {\r\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\r\n}\r\n\r\nfunction __arraySum(array, index) {\r\n    var sum = 0;\r\n    for (var i = 0; i <= index; sum += array[i++]) {}\r\n    return sum\r\n}\r\nvar __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nvar __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nfunction __addDays(date, days) {\r\n    var newDate = new Date(date.getTime());\r\n    while (days > 0) {\r\n        var leap = __isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\r\n        if (days > daysInCurrentMonth - newDate.getDate()) {\r\n            days -= daysInCurrentMonth - newDate.getDate() + 1;\r\n            newDate.setDate(1);\r\n            if (currentMonth < 11) {\r\n                newDate.setMonth(currentMonth + 1)\r\n            } else {\r\n                newDate.setMonth(0);\r\n                newDate.setFullYear(newDate.getFullYear() + 1)\r\n            }\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + days);\r\n            return newDate\r\n        }\r\n    }\r\n    return newDate\r\n}\r\n\r\nfunction _strftime(s, maxsize, format, tm) {\r\n    var tm_zone = HEAP32[tm + 40 >> 2];\r\n    var date = {\r\n        tm_sec: HEAP32[tm >> 2],\r\n        tm_min: HEAP32[tm + 4 >> 2],\r\n        tm_hour: HEAP32[tm + 8 >> 2],\r\n        tm_mday: HEAP32[tm + 12 >> 2],\r\n        tm_mon: HEAP32[tm + 16 >> 2],\r\n        tm_year: HEAP32[tm + 20 >> 2],\r\n        tm_wday: HEAP32[tm + 24 >> 2],\r\n        tm_yday: HEAP32[tm + 28 >> 2],\r\n        tm_isdst: HEAP32[tm + 32 >> 2],\r\n        tm_gmtoff: HEAP32[tm + 36 >> 2],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\r\n    };\r\n    var pattern = UTF8ToString(format);\r\n    var EXPANSION_RULES_1 = {\r\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\r\n        \"%D\": \"%m/%d/%y\",\r\n        \"%F\": \"%Y-%m-%d\",\r\n        \"%h\": \"%b\",\r\n        \"%r\": \"%I:%M:%S %p\",\r\n        \"%R\": \"%H:%M\",\r\n        \"%T\": \"%H:%M:%S\",\r\n        \"%x\": \"%m/%d/%y\",\r\n        \"%X\": \"%H:%M:%S\",\r\n        \"%Ec\": \"%c\",\r\n        \"%EC\": \"%C\",\r\n        \"%Ex\": \"%m/%d/%y\",\r\n        \"%EX\": \"%H:%M:%S\",\r\n        \"%Ey\": \"%y\",\r\n        \"%EY\": \"%Y\",\r\n        \"%Od\": \"%d\",\r\n        \"%Oe\": \"%e\",\r\n        \"%OH\": \"%H\",\r\n        \"%OI\": \"%I\",\r\n        \"%Om\": \"%m\",\r\n        \"%OM\": \"%M\",\r\n        \"%OS\": \"%S\",\r\n        \"%Ou\": \"%u\",\r\n        \"%OU\": \"%U\",\r\n        \"%OV\": \"%V\",\r\n        \"%Ow\": \"%w\",\r\n        \"%OW\": \"%W\",\r\n        \"%Oy\": \"%y\"\r\n    };\r\n    for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule])\r\n    }\r\n    var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    function leadingSomething(value, digits, character) {\r\n        var str = typeof value == \"number\" ? value.toString() : value || \"\";\r\n        while (str.length < digits) {\r\n            str = character[0] + str\r\n        }\r\n        return str\r\n    }\r\n\r\n    function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, \"0\")\r\n    }\r\n\r\n    function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n            return value < 0 ? -1 : value > 0 ? 1 : 0\r\n        }\r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\r\n            if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\r\n                compare = sgn(date1.getDate() - date2.getDate())\r\n            }\r\n        }\r\n        return compare\r\n    }\r\n\r\n    function getFirstWeekStartDate(janFourth) {\r\n        switch (janFourth.getDay()) {\r\n            case 0:\r\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\r\n            case 1:\r\n                return janFourth;\r\n            case 2:\r\n                return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3:\r\n                return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4:\r\n                return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5:\r\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\r\n            case 6:\r\n                return new Date(janFourth.getFullYear() - 1, 11, 30)\r\n        }\r\n    }\r\n\r\n    function getWeekBasedYear(date) {\r\n        var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\r\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\r\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n                return thisDate.getFullYear() + 1\r\n            }\r\n            return thisDate.getFullYear()\r\n        }\r\n        return thisDate.getFullYear() - 1\r\n    }\r\n    var EXPANSION_RULES_2 = {\r\n        \"%a\": function (date) {\r\n            return WEEKDAYS[date.tm_wday].substring(0, 3)\r\n        },\r\n        \"%A\": function (date) {\r\n            return WEEKDAYS[date.tm_wday]\r\n        },\r\n        \"%b\": function (date) {\r\n            return MONTHS[date.tm_mon].substring(0, 3)\r\n        },\r\n        \"%B\": function (date) {\r\n            return MONTHS[date.tm_mon]\r\n        },\r\n        \"%C\": function (date) {\r\n            var year = date.tm_year + 1900;\r\n            return leadingNulls(year / 100 | 0, 2)\r\n        },\r\n        \"%d\": function (date) {\r\n            return leadingNulls(date.tm_mday, 2)\r\n        },\r\n        \"%e\": function (date) {\r\n            return leadingSomething(date.tm_mday, 2, \" \")\r\n        },\r\n        \"%g\": function (date) {\r\n            return getWeekBasedYear(date).toString().substring(2)\r\n        },\r\n        \"%G\": function (date) {\r\n            return getWeekBasedYear(date)\r\n        },\r\n        \"%H\": function (date) {\r\n            return leadingNulls(date.tm_hour, 2)\r\n        },\r\n        \"%I\": function (date) {\r\n            var twelveHour = date.tm_hour;\r\n            if (twelveHour == 0) twelveHour = 12;\r\n            else if (twelveHour > 12) twelveHour -= 12;\r\n            return leadingNulls(twelveHour, 2)\r\n        },\r\n        \"%j\": function (date) {\r\n            return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3)\r\n        },\r\n        \"%m\": function (date) {\r\n            return leadingNulls(date.tm_mon + 1, 2)\r\n        },\r\n        \"%M\": function (date) {\r\n            return leadingNulls(date.tm_min, 2)\r\n        },\r\n        \"%n\": function () {\r\n            return \"\\n\"\r\n        },\r\n        \"%p\": function (date) {\r\n            if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n                return \"AM\"\r\n            }\r\n            return \"PM\"\r\n        },\r\n        \"%S\": function (date) {\r\n            return leadingNulls(date.tm_sec, 2)\r\n        },\r\n        \"%t\": function () {\r\n            return \"\\t\"\r\n        },\r\n        \"%u\": function (date) {\r\n            return date.tm_wday || 7\r\n        },\r\n        \"%U\": function (date) {\r\n            var days = date.tm_yday + 7 - date.tm_wday;\r\n            return leadingNulls(Math.floor(days / 7), 2)\r\n        },\r\n        \"%V\": function (date) {\r\n            var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\r\n            if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n                val++\r\n            }\r\n            if (!val) {\r\n                val = 52;\r\n                var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n                if (dec31 == 4 || dec31 == 5 && __isLeapYear(date.tm_year % 400 - 1)) {\r\n                    val++\r\n                }\r\n            } else if (val == 53) {\r\n                var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n                if (jan1 != 4 && (jan1 != 3 || !__isLeapYear(date.tm_year))) val = 1\r\n            }\r\n            return leadingNulls(val, 2)\r\n        },\r\n        \"%w\": function (date) {\r\n            return date.tm_wday\r\n        },\r\n        \"%W\": function (date) {\r\n            var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\r\n            return leadingNulls(Math.floor(days / 7), 2)\r\n        },\r\n        \"%y\": function (date) {\r\n            return (date.tm_year + 1900).toString().substring(2)\r\n        },\r\n        \"%Y\": function (date) {\r\n            return date.tm_year + 1900\r\n        },\r\n        \"%z\": function (date) {\r\n            var off = date.tm_gmtoff;\r\n            var ahead = off >= 0;\r\n            off = Math.abs(off) / 60;\r\n            off = off / 60 * 100 + off % 60;\r\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4)\r\n        },\r\n        \"%Z\": function (date) {\r\n            return date.tm_zone\r\n        },\r\n        \"%%\": function () {\r\n            return \"%\"\r\n        }\r\n    };\r\n    pattern = pattern.replace(/%%/g, \"\\0\\0\");\r\n    for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date))\r\n        }\r\n    }\r\n    pattern = pattern.replace(/\\0\\0/g, \"%\");\r\n    var bytes = intArrayFromString(pattern, false);\r\n    if (bytes.length > maxsize) {\r\n        return 0\r\n    }\r\n    writeArrayToMemory(bytes, s);\r\n    return bytes.length - 1\r\n}\r\n\r\nfunction _strftime_l(s, maxsize, format, tm) {\r\n    return _strftime(s, maxsize, format, tm)\r\n}\r\n\r\nfunction allocateUTF8OnStack(str) {\r\n    var size = lengthBytesUTF8(str) + 1;\r\n    var ret = stackAlloc(size);\r\n    stringToUTF8Array(str, HEAP8, ret, size);\r\n    return ret\r\n}\r\n\r\nfunction getCFunc(ident) {\r\n    var func = Module[\"_\" + ident];\r\n    return func\r\n}\r\n\r\nfunction ccall(ident, returnType, argTypes, args, opts) {\r\n    var toC = {\r\n        \"string\": str => {\r\n            var ret = 0;\r\n            if (str !== null && str !== undefined && str !== 0) {\r\n                var len = (str.length << 2) + 1;\r\n                ret = stackAlloc(len);\r\n                stringToUTF8(str, ret, len)\r\n            }\r\n            return ret\r\n        },\r\n        \"array\": arr => {\r\n            var ret = stackAlloc(arr.length);\r\n            writeArrayToMemory(arr, ret);\r\n            return ret\r\n        }\r\n    };\r\n\r\n    function convertReturnValue(ret) {\r\n        if (returnType === \"string\") {\r\n            return UTF8ToString(ret)\r\n        }\r\n        if (returnType === \"boolean\") return Boolean(ret);\r\n        return ret\r\n    }\r\n    var func = getCFunc(ident);\r\n    var cArgs = [];\r\n    var stack = 0;\r\n\r\n    if (args) {\r\n        for (var i = 0; i < args.length; i++) {\r\n            var converter = toC[argTypes[i]];\r\n            if (converter) {\r\n                if (stack === 0) stack = stackSave();\r\n                cArgs[i] = converter(args[i])\r\n            } else {\r\n                cArgs[i] = args[i]\r\n            }\r\n        }\r\n    }\r\n    var ret = func.apply(null, cArgs);\r\n\r\n    function onDone(ret) {\r\n        if (stack !== 0) stackRestore(stack);\r\n        return convertReturnValue(ret)\r\n    }\r\n    ret = onDone(ret);\r\n    return ret\r\n}\r\n\r\nfunction cwrap(ident, returnType, argTypes, opts) {\r\n    argTypes = argTypes || [];\r\n    var numericArgs = argTypes.every(type => type === \"number\" || type === \"boolean\");\r\n    var numericRet = returnType !== \"string\";\r\n    if (numericRet && numericArgs && !opts) {\r\n        return getCFunc(ident)\r\n    }\r\n    return function () {\r\n        return ccall(ident, returnType, argTypes, arguments, opts)\r\n    }\r\n}\r\nvar FSNode = function (parent, name, mode, rdev) {\r\n    if (!parent) {\r\n        parent = this\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev\r\n};\r\nvar readMode = 292 | 73;\r\nvar writeMode = 146;\r\nObject.defineProperties(FSNode.prototype, {\r\n    read: {\r\n        get: function () {\r\n            return (this.mode & readMode) === readMode\r\n        },\r\n        set: function (val) {\r\n            val ? this.mode |= readMode : this.mode &= ~readMode\r\n        }\r\n    },\r\n    write: {\r\n        get: function () {\r\n            return (this.mode & writeMode) === writeMode\r\n        },\r\n        set: function (val) {\r\n            val ? this.mode |= writeMode : this.mode &= ~writeMode\r\n        }\r\n    },\r\n    isFolder: {\r\n        get: function () {\r\n            return FS.isDir(this.mode)\r\n        }\r\n    },\r\n    isDevice: {\r\n        get: function () {\r\n            return FS.isChrdev(this.mode)\r\n        }\r\n    }\r\n});\r\nFS.FSNode = FSNode;\r\nFS.staticInit();\r\nvar asmLibraryArg = {\r\n    \"p\": ___call_sighandler,\r\n    \"a\": ___cxa_allocate_exception,\r\n    \"b\": ___cxa_throw,\r\n    \"i\": ___syscall_fcntl64,\r\n    \"k\": ___syscall_ioctl,\r\n    \"s\": ___syscall_openat,\r\n    \"q\": ___syscall_pipe,\r\n    \"e\": __emscripten_date_now,\r\n    \"w\": __emscripten_get_now_is_monotonic,\r\n    \"c\": _abort,\r\n    \"v\": _emscripten_get_now,\r\n    \"x\": _emscripten_memcpy_big,\r\n    \"o\": _emscripten_resize_heap,\r\n    \"t\": _environ_get,\r\n    \"u\": _environ_sizes_get,\r\n    \"d\": _exit,\r\n    \"h\": _fd_close,\r\n    \"r\": _fd_fdstat_get,\r\n    \"g\": _fd_read,\r\n    \"l\": _fd_seek,\r\n    \"f\": _fd_write,\r\n    \"m\": _getentropy,\r\n    \"j\": _proc_exit,\r\n    \"n\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\r\n    return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"z\"]).apply(null, arguments)\r\n};\r\nvar _main = Module[\"_main\"] = function () {\r\n    return (_main = Module[\"_main\"] = Module[\"asm\"][\"B\"]).apply(null, arguments)\r\n};\r\nvar ___errno_location = Module[\"___errno_location\"] = function () {\r\n    return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"C\"]).apply(null, arguments)\r\n};\r\nvar _malloc = Module[\"_malloc\"] = function () {\r\n    return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"D\"]).apply(null, arguments)\r\n};\r\nvar stackSave = Module[\"stackSave\"] = function () {\r\n    return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"E\"]).apply(null, arguments)\r\n};\r\nvar stackRestore = Module[\"stackRestore\"] = function () {\r\n    return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"F\"]).apply(null, arguments)\r\n};\r\nvar stackAlloc = Module[\"stackAlloc\"] = function () {\r\n    return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"G\"]).apply(null, arguments)\r\n};\r\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function () {\r\n    return (___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = Module[\"asm\"][\"H\"]).apply(null, arguments)\r\n};\r\nModule[\"ccall\"] = ccall;\r\nModule[\"cwrap\"] = cwrap;\r\nvar calledRun;\r\ndependenciesFulfilled = function runCaller() {\r\n    if (!calledRun) run();\r\n    if (!calledRun) dependenciesFulfilled = runCaller\r\n};\r\n\r\nfunction callMain(args) {\r\n    var entryFunction = Module[\"_main\"];\r\n    args = args || [];\r\n    args.unshift(thisProgram);\r\n    var argc = args.length;\r\n    var argv = stackAlloc((argc + 1) * 4);\r\n    var argv_ptr = argv >> 2;\r\n    args.forEach(arg => {\r\n        HEAP32[argv_ptr++] = allocateUTF8OnStack(arg)\r\n    });\r\n    HEAP32[argv_ptr] = 0;\r\n    try {\r\n        var ret = entryFunction(argc, argv);\r\n        exitJS(ret, true);\r\n        return ret\r\n    } catch (e) {\r\n        return handleException(e)\r\n    }\r\n}\r\n\r\nfunction run(args) {\r\n    args = args || arguments_;\r\n    if (runDependencies > 0) {\r\n        return\r\n    }\r\n    preRun();\r\n    if (runDependencies > 0) {\r\n        return\r\n    }\r\n    function doRun() {\r\n        if (calledRun) return;\r\n        calledRun = true;\r\n        Module['calledRun'] = true;\r\n        if (ABORT) return;\r\n        initRuntime();\r\n        preMain();\r\n        readyPromiseResolve(Module);\r\n        // Call the execution of the main function\r\n        if (shouldRunNow) callMain(args);\r\n        // Call the post run function when no error happen\r\n        postRun();\r\n    }\r\n    {\r\n        doRun();\r\n    }\r\n}\r\nvar shouldRunNow = true;\r\nrun();\r\nreturn Module.ready;\r\n    };\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object') module.exports = Module;\r\nelse if (typeof define === 'function' && define['amd'])\r\n    define([], function () {\r\n        return Module;\r\n    });\r\nelse if (typeof exports === 'object') exports['Module'] = Module;\r\n"],"sourceRoot":""}